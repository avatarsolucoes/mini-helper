{"version":3,"file":"index.es.js","sources":["../src/array.js","../src/glob.js","../src/string.js","../src/variables.js","../src/object.js","../src/number.js","../src/ramdom.js","../src/date.js","../src/image.js","../src/file.js"],"sourcesContent":["// import chunk from 'chunk'\nimport { forceArray } from './arrayts'\n\n// /**\n//  * Force any values an array\n//  * @function forceArray\n//  * @param {any} value\n//  * @return {Array}\n//  * @example\n//  * forceArray('1') // return ['1']\n//  */\n// export function forceArray(value = []) {\n//   return !Array.isArray(value) ? [value] : value\n// }\n\n/**\n * If array return first item\n * @function unArray\n * @param {Array} arr\n */\nexport function unArray(arr) {\n  if (!Array.isArray(arr)) return arr\n  if (arr.length > 0) return arr[0]\n  return false\n}\n\n/**\n * @function range\n * @param {Number} begin\n * @param {Number} end\n * @param {Number} interval\n */\nexport function* range(begin, end, interval = 1) {\n  for (let i = begin; i <= end; i += interval) {\n    yield i\n  }\n}\n\n/**\n * @function rangeArray\n * @param {Number} init\n * @param {Number} fim\n * @param {Number} interval\n * @returns {Array<number>}\n * @example\n * rangeArray(1, 5, 1) // [1,2,3,4,5]\n */\nexport function rangeArray(init, fim, interval = 1) {\n  return Array.from(range(init, fim, interval))\n}\n\n/**\n * Convert Buffer in Array\n * @param {Buffer|ArrayBuffer|string} buf dataBuffer\n * @returns {Array} chunked\n * @example\n * buffToArray('A03B18') // return ['A0','3B','18']\n */\nexport function buffToArray(buf, size = 2) {\n  if (!buf) return []\n\n  const chunk = require('chunk')\n\n  if (buf instanceof Buffer) {\n    return chunk(buf.toString('hex'), size)\n  }\n  if (Array.isArray(buf)) return buf\n  return chunk(buf.replace(/ /g, ''), size)\n}\n\n/**\n * @function medianInArray\n * @param {Array<Number>} arr array of Numbers\n * @param {Boolean} withZero\n * @returns {Number}\n */\nexport function medianInArray(arr, withZero = false) {\n  if (!Array.isArray(arr)) return typeof arr === 'number' ? arr : 0\n  const array = withZero ? arr.map(a => a || 0) : arr.filter(a => !!(a && a > 0))\n  array.sort((a, b) => a - b)\n  const lowMid = Math.floor((array.length - 1) / 2)\n  const highMid = Math.ceil((array.length - 1) / 2)\n  return (array[lowMid] + array[highMid]) / 2\n}\n\n/**\n * @function averageInArray\n * @param {Array<Number>} arr array of Numbers\n * @param {Boolean} withZero\n * @returns {Number}\n */\nexport function averageInArray(arr, withZero) {\n  if (!Array.isArray(arr)) return typeof arr === 'number' ? arr : 0\n  const array = withZero ? arr.map(a => a || 0) : arr.filter(f => f)\n  return array.reduce((a, b) => a + b, 0) / array.length\n}\n\n/**\n * @function sumArray\n * @param {Array<Number>} arrOfNumber\n * @param {boolean} checkNumber\n * @returns {Number} sum\n * @example\n * var arr = [4, 2, 8, 6];\n * sumArray(arr) // return 20\n * sumArray(['1','teste', 2], true) // return 3\n */\nexport function sumArray(arrOfNumber, checkNumber) {\n  const sum = (t, n) => {\n    if (n && typeof n === 'number' && n !== 0) return t + n\n    if (n && typeof n === 'string' && checkNumber) return t + (parseInt(n, 10) || 0)\n    return t\n  }\n  return forceArray(arrOfNumber).reduce(sum, 0)\n}\n","const g =\n  (typeof self === 'object' && self.self === self && self) ||\n  (typeof window === 'object' && window.window === window && window) ||\n  (typeof global === 'object' && global.global === global && global)\n\nexport default g\n","import glob from './glob'\n/* eslint-disable prefer-destructuring */\nexport const defaultForbidenChars = \"'@#$%¨&*()_+{}?^:><|¹²³£¢¬§ªº°;.,~´`=-\"\n/**\n * (string) Remove the first character\n * @function rmFirstChar\n * @param {String} str\n * @returns {String} string modified\n */\nexport function rmFirstChar(str) {\n  return str.slice(1)\n}\n\n/**\n * (string) Remove the last character\n * @function rmLastChar\n * @param {String} str\n * @returns {String} string modified\n */\nexport function rmLastChar(element) {\n  return element.slice(0, element.length - 1)\n}\n\n/**\n * (string) Primeira palavra da sentenca\n * @function firstWord\n * @param {String} text\n * @returns {String}\n * @example\n * firstWord('Leandro Sbrissa') // Leandro\n */\nexport function firstWord(text) {\n  if (!text) return ''\n  const fullName = text.trim().split(' ')\n  return fullName[0]\n}\n\n/**\n * (string) Ultima palavra da sentenca\n * @function lastWord\n * @param {String} text\n * @returns {String}\n * @example\n * lastWord('Leandro Sbrissa') // Sbrissa\n */\nexport function lastWord(text) {\n  if (!text) return ''\n  const fullName = text.trim().split(' ')\n  return fullName.slice(-1).join(' ')\n}\n\n/**\n * @function replaceAll\n * @param {String} str\n * @param {String} needle\n * @param {String} replacement\n * @example\n * replaceAll('T*T', '*', '_') // return 'T_T'\n */\nexport function replaceAll(str, needle, replacement) {\n  if (!str) return ''\n  if (Array.isArray(needle)) {\n    let rtn = `${str}`\n    for (let i = 0; i < needle.length; i++) {\n      rtn = replaceAll(rtn, needle[i], replacement)\n    }\n    return rtn\n  }\n  return str.split(needle).join(replacement)\n}\n\n/**\n * @function removeAll\n * @param {String|Array<string>} str\n * @param {String|Array<string>} chars\n * @returns {String|Array<string>}\n * @example\n * removeAll('TEST#$_', '#$_') // return 'TEST'\n */\nexport function removeAll(str, chars = defaultForbidenChars, replacement = '') {\n  if (!str) return ''\n  if (Array.isArray(str)) return str.map(r => removeAll(r, chars, replacement))\n  const c = Array.isArray(chars) ? chars : chars.split('')\n  let result = str\n  for (let i = 0; i < c.length; i++) result = replaceAll(result, c[i], replacement)\n  return result\n}\n\n/**\n * Primeiras letras em maiuscula\n * @function titleize\n * @param {String} text\n * @returns {String}\n * @example\n * titleize('teste de maiuscula') // Teste de Maiuscula\n */\nexport function titleize(text) {\n  if (!text) return ''\n  const cases = ['de', 'do', 'da', 'dos', 'das', 'a', 'o', 'as', 'os', 'e', 'di']\n  const words = text.toLowerCase().trim().split(' ')\n  return words\n    .map(w => {\n      if (cases.indexOf(w) < 0) {\n        return `${w[0].toUpperCase()}${w.slice(1)}`\n      }\n      return w\n    })\n    .join(' ')\n}\n\n/**\n * Verify if String is MAC address\n * @function isMAC\n * @param {String} strMac\n * @returns {Boolean}\n */\nexport function isMAC(strMac) {\n  if (!strMac) return false\n  if (strMac.indexOf(':') >= 0 && strMac.length !== 17) return false\n  if (strMac.indexOf(':') < 0 && strMac.length !== 12) return false\n  const re = /^[a-fA-F0-9:]{17}|[a-fA-F0-9]{12}$/g\n  return re.test(strMac)\n}\n\nexport function isHexReg(str) {\n  const re = /[0-9A-Fa-f]{6}/g\n  return re.test(str)\n  // re.lastIndex = 0; // be sure to reset the index after using .text()\n}\n\n// export function isHex(h) {\n//   const a = parseInt(h, 16)\n//   return a.toString(16) === h\n// }\n\n/**\n * @function extractHostname\n * @param {String} url\n * @returns {String}\n */\nexport function extractHostname(url) {\n  let hostname\n  if (url.indexOf('//') > -1) {\n    hostname = url.split('/')[2]\n  } else {\n    hostname = url.split('/')[0]\n  }\n  hostname = hostname.split(':')[0]\n  hostname = hostname.split('?')[0]\n  return hostname\n}\n\n/**\n * @function toMask\n * @param {string} mask\n * @param {Number|String} number alphanumeric\n * @returns {String}\n * @example\n * toMask('XXX-XXXX', ABC1234) // ABC-1234\n */\nexport function toMask(mask, number) {\n  if (!number) return ''\n  const s = `${number}`\n  let r = ''\n  for (let im = 0, is = 0; im < mask.length && is < s.length; im++) {\n    r += mask.charAt(im) === 'X' ? s.charAt(is++) : mask.charAt(im)\n  }\n  return r\n}\n\n/**\n * @function isValidTime\n * @param {string} str\n * @returns {Boolean}\n */\nexport function isValidTime(str) {\n  return /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(str)\n}\n\n/**\n * @function formatBytes\n * @param {number|string} bytes numero em bytes\n * @param {number} decimals casas decimais\n * @example\n * // formatBytes(bytes,decimals)\n * formatBytes(1024);       // 1 KB\n * formatBytes('1024');     // 1 KB\n * formatBytes(1234);       // 1.21 KB\n * formatBytes(1234, 3);    // 1.205 KB\n */\nexport function formatBytes(bytes, decimals = 2) {\n  if (!bytes || bytes === 0) return '0 Bytes'\n\n  const k = 1024\n  const b = bytes < 0 ? bytes * -1 : bytes\n  const dm = decimals < 0 ? 0 : decimals\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n\n  const i = Math.floor(Math.log(b) / Math.log(k))\n\n  return `${parseFloat((b / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`\n}\n\n/**\n * @function camelize\n * @param {String} str\n * {@link https://stackoverflow.com/questions/2970525/converting-any-string-into-camel-case StackOverflow}.\n * @example\n * camelize(\"EquipmentClass name\");\n * camelize(\"Equipment className\");\n * camelize(\"equipment class name\");\n * camelize(\"Equipment Class Name\");\n * // all output \"equipmentClassName\"\n */\nexport function camelize(str) {\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase()\n    })\n    .replace(/\\s+/g, '')\n}\n\n/**\n * @function urlEncodeObject\n * @param {any} object\n * @returns {string}\n * @example\n * urlEncodeObject({foo: 'fooValue', bar: 'barValue'}) // foo=fooValue&bar=barValue\n */\nexport function urlEncodeObject(object) {\n  if (typeof object !== 'object' || object instanceof Date) return ''\n  const result = []\n  Object.keys(object).forEach(k => {\n    const value = `${object[k]}`\n    glob && glob.encodeURIComponent && result.push(`${k}=${glob.encodeURIComponent(value)}`)\n  })\n  return result.length ? result.join('&') : ''\n}\n\n/**\n * @function isEmail\n * @param {String} value e-mail string\n * @returns {boolean}\n */\nexport function isEmail(value) {\n  // eslint-disable-next-line prefer-regex-literals\n  const reg = new RegExp(/^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/)\n  return value && reg.test(value)\n}\n\n/**\n * @function validURL\n * @param {string|Array<string>} str\n * @returns {boolean|Array<boolean>}\n * @example\n * validURL('http://example.com') // true\n * validURL(['http://example1.com', 'abcde']) // [true, false]\n */\nexport function validURL(str) {\n  if (Array.isArray(str)) return str.map(s => validURL(s))\n\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i'\n  )\n\n  return !!pattern.test(str)\n}\n","export function isDefined(v) {\n  try {\n    return !!(v !== null && v !== undefined)\n  } catch (error) {\n    return false\n  }\n}\n\nexport function notNull(value, defaultValue = true) {\n  return value === undefined || value === null ? defaultValue : value\n}\n\n/**\n * Convert Int To String(Hex)\n * @param {Number} int\n * @param {Number} size integer\n * @param {Boolean} noLeftZero\n * @returns {string} hex(number)\n */\nexport function intToHex(int, size, noLeftZero) {\n  const rmL = s => s.replace(/^0+/, '')\n  try {\n    const hex = Number(int).toString(16).toLocaleUpperCase()\n    const len = hex.length % 2 !== 0 ? hex.length + 1 : hex.length\n    return noLeftZero ? rmL(hex) : hex.padStart(size || len, '0')\n  } catch (e) {\n    const rtn = '00'\n    return noLeftZero ? rmL(rtn) : rtn.padStart(size || 2, '0')\n  }\n}\n\n/**\n * Convert Int To String(Hex)\n * @param {Number} int\n * @returns {string} hex(number)\n */\nexport function intToHex2(int) {\n  try {\n    const hex = Number(int).toString(16).toLocaleUpperCase()\n    const len = hex.length % 2 !== 0 ? hex.length + 1 : hex.length\n    return hex.padStart(len, '0')\n  } catch (e) {\n    return `0${(0).toString(16)}`.slice(-2).toUpperCase()\n  }\n}\n/**\n * @function tryInteger\n * @param {any} value\n * @returns {Number|False}\n */\nexport function tryInteger(value) {\n  const numero = parseInt(value, 10)\n  if (Number.isInteger(numero) || numero <= 0) return numero\n  return false\n}\n\n/**\n * Converte Hexadecimal em Alphanumeric String\n * @function hexToAlphaNumeric\n * @param {Buffer | String | Array<String>} hexx\n * @param {Boolean} preserve se true converte invalid ALPHANUMERIC in space\n * @returns {String} hexadecimal string\n * @example\n * hexToAlphaNumeric('414243') // return 'ABC'\n * hexToAlphaNumeric('413943', true) // return 'A C'\n */\nexport function hexToAlphaNumeric(hexx, preserve) {\n  try {\n    if (!hexx) return ''\n    let hex = ''\n    if (hexx instanceof Buffer) hex = hexx.toString('hex').toUpperCase()\n    if (Array.isArray(hexx)) hex = hexx.join('').toUpperCase()\n    hex = require('chunk')(hex, 2)\n    let result = ''\n    for (let i = 0; i < hex.length; i++) {\n      const h = hex[i]\n      const num = hexToInt(h)\n      if (preserve) {\n        result += num >= 40 && num <= 126 ? String.fromCharCode(num) : ' '\n      } else if (num >= 40 && num <= 126) result += String.fromCharCode(num)\n    }\n    return result\n  } catch (error) {\n    throw new Error('install module \"chunk\"')\n  }\n}\n\nexport function hex2a(hexx) {\n  const hex = hexx.toString() // force conversion\n  let str = ''\n  for (let i = 0; i < hex.length && hex.substr(i, 2) !== '00'; i += 2) {\n    str += String.fromCharCode(parseInt(hex.substr(i, 2), 16))\n  }\n  return str\n}\n\n/**\n * Convert HEX To String UTF-8\n * @param {Buffer} hex\n * @returns {string} ASCII(hex)\n */\nexport function hexToASC(hex) {\n  try {\n    if (hex instanceof Buffer) {\n      return hex.toString('utf8')\n    }\n    if (Array.isArray(hex)) return Buffer.from(hex.join(''), 'hex').toString('utf8')\n    return Buffer.from(hex, 'hex').toString('utf8')\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Convert ASCII To String(Hex)\n * @param {String} str\n * @returns {string} hex(number)\n */\nexport function ASCToHex(str) {\n  const arr1 = []\n  for (let n = 0, l = str.length; n < l; n++) {\n    const hex = Number(str.charCodeAt(n)).toString(16)\n    arr1.push(hex)\n  }\n  return arr1.join('')\n}\n\n/**\n * @function hexToInt\n * @param {String | Array} strhex\n * @returns {Number} decimal ASCII\n * @example\n * hexToInt('41'); // return 'A'\n * hexToInt(['41','42','43']); // return ['A','B','C']\n */\nexport function hexToInt(strhex) {\n  if (Array.isArray(strhex)) return strhex.map(item => hexToInt(item))\n  try {\n    const result = parseInt(strhex, 16)\n    return result\n  } catch (error) {\n    return 0\n  }\n}\n","// import _ from 'lodash'\nimport { forceArray } from './arrayts'\n\n/**\n * Simple object check.\n * @param item\n * @returns {boolean}\n */\nexport function isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item) && !(item instanceof Date)\n}\n\n// /**\n//  * Check if there is ownership in an object\n//  * @function objectHasKeys\n//  * @param {Object} obj\n//  * @param {Array<String>} keys\n//  * @returns {boolean}\n//  * @example\n//  * objectHasKeys({ a: 1, b: 2}, ['b','c']) // true match 'b'\n//  * objectHasKeys({ a: 1, b: 2}, ['c']) // false\n//  */\n// export function objectHasKeys(obj, keys) {\n//   const keysO = Object.keys(obj)\n//   const k = forceArray(keys)\n//   for (let i = 0; i < keysO.length; i++) {\n//     if (k.includes(keysO[i])) {\n//       return true\n//     }\n//   }\n//   return false\n// }\n\n/**\n * Get object by omitting properties\n * @function objectWithoutProperties\n * @param {Object} obj\n * @param {Array<string>} keys\n * @returns {Object}\n * @example\n * objectWithoutProperties({ a: 1, b: 2, c: 3 }, ['b'])\n * // return { a: 1, c: 3 }\n */\nexport function objectWithoutProperties(obj, keys) {\n  const target = {}\n  const keysO = Object.keys(obj)\n  for (let i = 0; i < keysO.length; i++) {\n    const k = keysO[i]\n    if (!keys.includes(k)) target[k] = obj[k]\n  }\n  return target\n}\n\n/**\n * Compares object and returns only existing keys\n * @function onlyWithProperties\n * @param {object|Array<object>} obj\n * @param {Array<string>|Object|string} keys\n * @returns {object|Array<object>}\n * @example\n * onlyWithProperties({ a: 1, b: 2, c: 3 }, ['b']) // produce { b: 2 }\n * onlyWithProperties({ a: 1, b: 2, c: 3 }, { b: 1 }) // produce { b: 2 }\n * onlyWithProperties({ a: 1, b: 2, c: 3 }, 'b') // produce { b: 2 }\n */\nexport function onlyWithProperties(obj, keys = []) {\n  if (Array.isArray(obj)) return obj.map(o => onlyWithProperties(o, keys))\n  if (typeof obj !== 'object') return {}\n\n  const target = {}\n  const keysCompare = []\n\n  if (Array.isArray(keys)) keys.forEach(k => keysCompare.push(k))\n  else if (typeof keys === 'object') Object.keys(keys).forEach(k => keysCompare.push(k))\n  else forceArray(keys).forEach(k => keysCompare.push(k))\n\n  Object.keys(obj).forEach(k => {\n    if (keysCompare.includes(k)) target[k] = obj[k]\n  })\n\n  return target\n}\n\n/**\n * @typedef {Object} replaceObjectOptions\n * @property {Boolean} clone clone this\n * @property {Boolean} inc incremental keys\n */\n\n/**\n * Replace object values\n * @function replaceObject\n * @param {Object} dest\n * @param {Object} src\n * @param {replaceObjectOptions} options\n * @returns {Object} object affected\n */\n// export function replaceObject(dest, src, options) {\n//   if (!dest || !src) return false\n//   const funcCopy = value => (options && options.clone ? _.cloneDeep(value) : value)\n\n//   Object.keys(src).forEach(key => {\n//     if ((options && options.inc) || key in dest) {\n//       // eslint-disable-next-line no-param-reassign\n//       dest[key] = funcCopy(src[key])\n//     }\n//   })\n\n//   return dest\n// }\n\n/**\n * Sorts array of objects\n * credits: https://www.sitepoint.com/sort-an-array-of-objects-in-javascript/\n * @function compareValues\n * @param {String} key\n * @param {String} order\n * @example\n * myArray.sort(compareValues('name', 'desc'));\n */\nexport function compareValues(key, order = 'asc') {\n  return function innerSort(a, b) {\n    if (!(key in a) || !(key in b)) return 0\n    const varA = typeof a[key] === 'string' ? a[key].toUpperCase() : a[key]\n    const varB = typeof b[key] === 'string' ? b[key].toUpperCase() : b[key]\n\n    let comparison = 0\n    if (varA > varB) {\n      comparison = 1\n    } else if (varA < varB) {\n      comparison = -1\n    }\n    return order === 'desc' ? comparison * -1 : comparison\n  }\n}\n\n/**\n * Deep merge objects.\n * @param target\n * @param sources\n */\nexport function mergeDeep(target, ...sources) {\n  if (!sources.length) return target\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    const keys = Object.keys(source)\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} })\n        mergeDeep(target[key], source[key])\n      } else {\n        Object.assign(target, { [key]: source[key] })\n      }\n    }\n  }\n  return mergeDeep(target, ...sources)\n}\n","/**\n * Arredonda numero com casas decimais\n * @function round\n * @param {Number} number\n * @param {Number} precision\n * @example\n * round(1234.5678, 1); // 1234.6\n */\nexport function round(number, precision = 4) {\n  if (!number || (number && number === 0)) return 0\n  const factor = Math.pow(10, precision)\n  const tempNumber = number * factor\n  const roundedTempNumber = Math.round(tempNumber)\n  return roundedTempNumber / factor\n}\n\n/**\n * Arredonda numero com casas decimais\n * @function round2\n * @param {Number} number\n * @param {Number} precision\n * @example\n * round2(1234.5678, 1); // 1234.6\n */\nexport function round2(number, precision = 4) {\n  if (!number || (number && number === 0)) return 0\n  if (typeof number === 'string') return parseFloat(number).toFixed(precision)\n  if (typeof number === 'number') return number.toFixed(precision)\n  return 0\n}\n\nexport function round3(number, precision = 4) {\n  return +`${Math.round(`${number}e+${precision}`)}e-${precision}`\n}\n","/**\n * Returns a random number between min (inclusive) and max (exclusive)\n * @function getRandomArbitrary\n * @returns {number}\n */\nexport function getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * @function getRandomInt\n * @param {number} min integer\n * @param {number} max integer\n * @returns {number}\n */\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n/**\n * Gerar caracteres aleatorios\n * @function getRamdomStr\n * @param {Number} len tamanho\n * @param {String} wishlist lista de caracteres para utilizar\n * @example\n * getRamdomStr(4,'0123ABCDEF')\n */\nexport function getRamdomStr(len, whitelist = '123456789ABCEFGHKMPQRSTXYZ') {\n  try {\n    const getRandomValues = require('get-random-values')\n    return Array(len)\n      .fill('')\n      .map(() => {\n        // eslint-disable-next-line no-mixed-operators\n        const q = Math.floor(\n          (getRandomValues(new Uint8Array(1))[0] / (0xff + 1)) * whitelist.length\n        )\n        return whitelist[q]\n      })\n      .join('')\n  } catch {\n    throw new Error('install module \"get-random-values\"')\n  }\n}\n\nexport function getInRamdom(object) {\n  if (Array.isArray(object)) {\n    return getInRamdom(object[getRandomInt(0, object.length - 1)])\n  }\n\n  if (typeof object === 'object') {\n    const arrKeys = Object.keys(object)\n    const key = arrKeys[getRandomInt(0, arrKeys.length - 1)]\n    if (key in object) return object[key]\n  }\n\n  if (typeof object === 'function') return getInRamdom(object())\n\n  const arrstr = (object || '123456789ABCEFGHKMPQRSTXYZ').toString().split('')\n  return arrstr[getRandomInt(0, arrstr.length - 1)]\n}\n\n/**\n * @function getRamdomHex\n * @param {Number} size - integer (default 16)\n * @returns {String} - HEX\n * @example\n * getRamdomHex() // c05662d445cd3988402521922ba16e29\n */\nexport function getRamdomHex(size = 16) {\n  const { randomBytes } = require('crypto')\n  const result = randomBytes(size)\n  return result.toString('hex')\n}\n\nexport function generateIdPass(payload, secret = '') {\n  const { v4: uuid } = require('uuid')\n  const md5 = require('md5')\n  const uid = uuid()\n\n  const p = JSON.stringify(payload)\n  return md5(`${uid}${p}${secret}${getRamdomHex()}`)\n}\n\n/**\n * @function hashPassword\n * @param {String} payload\n * @param {String} secret\n * @returns {String} HASH MD5\n */\nexport function hashPassword(payload, secret = '') {\n  try {\n    const md5 = require('md5')\n    return md5(`${payload}${secret}`)\n  } catch {\n    // eslint-disable-next-line no-throw-literal\n    throw new Error('install module \"md5\"')\n  }\n}\n\n/**\n * @function hashMD5\n * @param {String} str\n * @param {Boolean} toBuffer\n */\nexport function hashMD5(str, toBuffer) {\n  try {\n    const md5 = require('md5')\n    const hash = md5(`${str}`)\n    return toBuffer ? Buffer.from(require('chunk')(hash, 2)) : hash\n  } catch {\n    throw new Error('hashMd5 needs the \"chunk\" and \"md5\" dependencies')\n  }\n}\n\n/**\n * @function isMD5\n * @param {String} inputString\n */\nexport function isMD5(inputString) {\n  // if (typeof inputString !== 'string') return false;\n  return /[a-fA-F0-9]{32}/.test(inputString)\n}\n","import moment from 'moment-timezone'\n\n/**\n * @function timeRest\n * @param {Number} inMinutes integer\n */\nexport function timeRest(inMinutes) {\n  const minutes = inMinutes < 0 ? inMinutes * -1 : inMinutes\n  const minutos = 1\n  const horas = 60 // minuto * 60\n  const dias = 1440 // hora * 24\n  const semanas = 10080 // dias * 7\n  const meses = 302400 // semanas * 4\n  const anos = 3628800 // meses * 12\n\n  // let valorInicio = parseInt(minutes, 10) || 0;\n  let valorInicio = minutes\n  let result = ''\n\n  if (valorInicio > anos) {\n    const ano = Math.floor(valorInicio / anos)\n    result += `${ano}y `\n    valorInicio -= anos * ano\n  }\n\n  if (valorInicio > meses) {\n    const mes = Math.floor(valorInicio / meses)\n    result += `${mes}mo `\n    valorInicio -= meses * mes\n  }\n\n  if (valorInicio > semanas) {\n    const semana = Math.floor(valorInicio / semanas)\n    result += `${semana}se `\n    valorInicio -= semanas * semana\n  }\n\n  if (valorInicio > dias) {\n    const dia = Math.floor(valorInicio / dias)\n    result += `${dia}d `\n    valorInicio -= dias * dia\n  }\n\n  if (valorInicio > horas) {\n    const hora = Math.floor(valorInicio / horas)\n    result += `${hora}h `\n    valorInicio -= horas * hora\n  }\n\n  if (valorInicio > minutos) {\n    const minuto = Math.floor(valorInicio / minutos)\n    result += `${minuto}m`\n  } else if (valorInicio > 0) {\n    const mm = valorInicio * 60\n    result += `${Math.floor(mm)}seg`\n  }\n\n  // const minuto = valorInicio;\n  // result += `${minuto}m `;\n\n  return result\n}\n\nexport function getUpTime(init) {\n  const ms = moment().diff(moment(init, 'YYYY-MM-DD HH:mm:ss'))\n  return timeRest(moment.duration(ms).asMinutes()) || 0\n}\n\n/**\n * @function diffExpires\n * @param {number} expires\n * @param {number} dateNow\n * @returns {number} minutes\n */\nexport function diffExpires(expires, dateNow = Date.now()) {\n  const ms = moment(expires).diff(moment(dateNow))\n  return moment.duration(ms).asMinutes()\n}\n\n/**\n * @function dateToStrTimeZone\n * @param {String|Date} date\n * @param {String} to date format\n * @param {String} timezone\n * @returns {String} data formated (to)\n * @example\n * dateToStrTimeZone(new Date(), 'YYYY-MM-DD HH:mm:ss', 'America/Fortaleza');\n */\nexport function dateToStrTimeZone(\n  date,\n  to = 'YYYY-MM-DD HH:mm:ss',\n  timezone = 'America/Fortaleza'\n) {\n  if (!timezone) return moment(date).format(to)\n  return moment(date).tz(timezone).format(to)\n}\n\n/**\n *\n * @param {String} strdate\n * @param {String} from date format\n * @param {String} to date format\n * @returns {String} data formated (to)\n * @example\n * strDateFromTo('01/12/19', 'DD/MM/YY', 'YYY-MM-DD')\n */\nexport function strDateFromTo(strdate, from, to = 'YYYY-MM-DD HH:mm:ss') {\n  if (!strdate) return moment().format(to)\n  if (strdate instanceof Date) return moment(strdate).format(to)\n  if (moment.isMoment(strdate)) return strdate.format(to)\n\n  return moment(strdate, from).format(to)\n}\n\n/**\n *\n * @param {*} date\n * @param {*} format\n */\nexport function rangedMonth(date, format) {\n  const r = {\n    start: moment(date).startOf('month'),\n    end: moment(date).endOf('month')\n  }\n\n  if (typeof format === 'boolean') {\n    if (format) return { start: r.start, end: r.end }\n    return { start: r.toDate(), end: r.toDate() }\n  }\n\n  const defFormat = format || 'YYYY-MM-DD HH:mm:ss'\n  return {\n    start: moment(date).startOf('month').format(defFormat),\n    end: moment(date).endOf('month').format(defFormat)\n  }\n}\n\n/**\n * @function extractOfDateTime\n * @param {Date|String} datetime - string YYYY-MM-DD HH:mm:ss\n * @param {String} format date format ex: 'YYYY-MM-DD HH:mm:ss'\n * @param {String} timezone\n */\nexport function extractOfDateTime(datetime, format, timezone) {\n  const all = dateToStrTimeZone(datetime, format, timezone)\n  const spliter = all.split(' ')\n  const time = spliter.length > 1 ? spliter[1] : '00:00:00'\n  const date = spliter.length > 0 ? spliter[0] : 'Invalid date'\n  return {\n    date,\n    time\n  }\n}\n","// import sharp from 'sharp'\n// import base64Img from 'base64-img'\n\n// /**\n//  * @function convertSvgToPng\n//  * @param {String} source\n//  * @param {String} dest\n//  */\n// export async function convertSvgToPng(source, dest) {\n//   try {\n//     const converted = await sharp(source).png().toFile(dest)\n//     return converted\n//   } catch (_error) {\n//     return false\n//   }\n// }\n\n/**\n * @function toBase64Img\n * @param {String} filePath\n */\nexport function toBase64Img(filePath) {\n  const base64Img = require('base64-img')\n  return base64Img && base64Img.base64Sync(filePath)\n}\n","// eslint-disable-next-line no-new-func\nexport const isNode = new Function('try {return this===global;}catch(e){return false;}')\n\n// eslint-disable-next-line no-new-func\nexport const isBrowser = new Function('try {return this===window;}catch(e){ return false;}')\n\n/**\n * @function fileHash\n * @param {string} filename\n * @param {'sha1'|'md5'|'sha256'|'sha512'} algorithm\n * @returns {Promise<string>|false}\n */\nexport async function fileHash(filename, algorithm = 'md5') {\n  if (isBrowser()) return false\n  const result = new Promise((resolve, reject) => {\n    try {\n      const { createHash } = require('crypto')\n      const fs = require('fs')\n      const shasum = createHash(algorithm)\n      const s = fs.ReadStream(filename)\n      s.on('data', data => shasum.update(data))\n      // making digest\n      s.on('end', () => {\n        const hash = shasum.digest('hex')\n        return resolve(hash)\n      })\n    } catch (error) {\n      return reject(error)\n    }\n  })\n\n  return result\n}\n\n/**\n * using path.parse\n * @function fileParse\n * @param {String} filePath\n * @returns {import('path').ParsedPath}\n */\nexport function fileParse(filePath) {\n  if (isBrowser()) return false\n  const { parse } = require('path')\n  return parse(filePath) || false\n}\n\n/**\n * using path.parse\n * @function pathJoin\n * @param {Array<string>} paths\n * @returns {String}\n */\nexport function pathJoin(...paths) {\n  if (isBrowser()) return false\n  const { join } = require('path')\n  return join(...paths)\n}\n\n/**\n * using path.extname\n * @function extName\n * @param {String} filePath\n * @returns {String} extension ex: '.png'\n */\nexport function extName(filePath) {\n  if (isBrowser()) return false\n  const { extname } = require('path')\n  return extname(filePath) || ''\n}\n\n/**\n * @function fileExists\n * @param {string} filePath\n */\nexport function fileExists(filePath) {\n  if (isBrowser()) return false\n  try {\n    const fs = require('fs')\n    return !!fs.existsSync(filePath)\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * @function deleteFile\n * @param {string} filePath\n * @returns {Promise<Boolean>}\n */\nexport async function deleteFile(filePath) {\n  if (isBrowser()) return false\n  try {\n    const fs = require('fs')\n    if (fileExists(filePath)) {\n      await fs.unlinkSync(filePath)\n    }\n    return true\n  } catch (_error) {\n    // logError(__filename, 'deleteFile', err)\n    return false\n  }\n}\n\n/**\n * @function renameFile\n * @param {String} oldPath\n * @param {String} newPath\n * @param {Boolean} force\n * @returns {Boolean}\n */\nexport function renameFile(oldPath, newPath, force) {\n  if (isBrowser()) return false\n  try {\n    const fs = require('fs')\n    if (force && fileExists(newPath)) {\n      fs.unlinkSync(newPath)\n    }\n    fs.renameSync(oldPath, newPath)\n    return true\n  } catch (_error) {\n    return false\n  }\n}\n\n/**\n * @function copyFile\n * @param {string} source\n * @param {string} target\n * @returns {Promise<boolean>}\n */\nexport async function copyFile(source, target) {\n  if (isBrowser()) return false\n\n  const result = await new Promise(resolve => {\n    const { copyFile } = require('fs')\n    copyFile(source, target, err => {\n      if (err) return resolve(false)\n      return resolve(true)\n    })\n  })\n  return result\n}\n"],"names":["unArray","arr","Array","isArray","length","range","begin","end","interval","i","rangeArray","init","fim","from","buffToArray","buf","size","chunk","require","Buffer","toString","replace","medianInArray","withZero","array","map","a","filter","sort","b","lowMid","Math","floor","highMid","ceil","averageInArray","f","reduce","sumArray","arrOfNumber","checkNumber","forceArray","t","n","parseInt","g","self","window","global","defaultForbidenChars","rmFirstChar","str","slice","rmLastChar","element","firstWord","text","trim","split","lastWord","join","replaceAll","needle","replacement","rtn","removeAll","chars","r","c","result","titleize","cases","toLowerCase","w","indexOf","toUpperCase","isMAC","strMac","test","isHexReg","extractHostname","url","hostname","toMask","mask","number","s","im","is","charAt","isValidTime","formatBytes","bytes","decimals","dm","log","parseFloat","pow","toFixed","camelize","word","index","urlEncodeObject","object","Date","Object","keys","forEach","k","value","glob","encodeURIComponent","push","isEmail","reg","RegExp","validURL","isDefined","v","error","notNull","defaultValue","intToHex","int","noLeftZero","rmL","hex","Number","toLocaleUpperCase","len","padStart","e","intToHex2","tryInteger","numero","isInteger","hexToAlphaNumeric","hexx","preserve","num","hexToInt","String","fromCharCode","Error","hex2a","substr","hexToASC","ASCToHex","arr1","l","charCodeAt","strhex","item","isObject","objectWithoutProperties","obj","target","keysO","includes","onlyWithProperties","o","keysCompare","compareValues","key","order","varA","varB","comparison","mergeDeep","sources","source","shift","assign","round","precision","factor","tempNumber","round2","round3","getRandomArbitrary","min","max","random","getRandomInt","getRamdomStr","whitelist","getRandomValues","fill","q","Uint8Array","getInRamdom","arrKeys","arrstr","getRamdomHex","randomBytes","generateIdPass","payload","secret","v4","uuid","md5","JSON","stringify","hashPassword","hashMD5","toBuffer","hash","isMD5","inputString","timeRest","inMinutes","dias","semanas","meses","anos","valorInicio","ano","mes","semana","dia","hora","mm","getUpTime","ms","moment","diff","duration","asMinutes","diffExpires","expires","dateNow","now","dateToStrTimeZone","date","to","timezone","tz","format","strDateFromTo","strdate","isMoment","rangedMonth","start","startOf","endOf","toDate","defFormat","extractOfDateTime","datetime","spliter","time","toBase64Img","filePath","base64Img","base64Sync","isNode","Function","isBrowser","async","fileHash","filename","algorithm","Promise","resolve","reject","createHash","fs","shasum","ReadStream","on","data","update","digest","fileParse","parse","pathJoin","paths","extName","extname","fileExists","existsSync","err","deleteFile","unlinkSync","_error","renameFile","oldPath","newPath","force","renameSync","copyFile"],"mappings":"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"}