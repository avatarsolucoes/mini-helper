{"version":3,"file":"index.js","sources":["../src/array.js","../src/glob.js","../src/string.js","../src/variables.js","../src/object.js","../src/ramdom.js","../src/date.js"],"sourcesContent":["import chunk from './chunk'\n\n/**\n * If array return first item\n * @function unArray\n * @param {Array} arr\n */\nexport function unArray(arr) {\n  if (!Array.isArray(arr)) return arr\n  if (arr.length > 0) return arr[0]\n  return false\n}\n\n/**\n * @function range\n * @param {Number} begin\n * @param {Number} end\n * @param {Number} interval\n */\nexport function* range(begin, end, interval = 1) {\n  for (let i = begin; i <= end; i += interval) {\n    yield i\n  }\n}\n/**\n * Convert Buffer in Array\n * @param {Buffer|ArrayBuffer|string} buf dataBuffer\n * @returns {Array} chunked\n * @example\n * buffToArray('A03B18') // return ['A0','3B','18']\n */\nexport function buffToArray(buf, size = 2) {\n  if (!buf) return []\n\n  if (buf instanceof Buffer) {\n    return chunk(buf.toString('hex'), size)\n  }\n  if (Array.isArray(buf)) return buf\n  return chunk(buf.replace(/ /g, ''), size)\n}\n\n/**\n * @function medianInArray\n * @param {Array<Number>} arr array of Numbers\n * @param {Boolean} withZero\n * @returns {Number}\n */\nexport function medianInArray(arr, withZero = false) {\n  if (!Array.isArray(arr)) return typeof arr === 'number' ? arr : 0\n  const array = withZero ? arr.map(a => a || 0) : arr.filter(a => !!(a && a > 0))\n  array.sort((a, b) => a - b)\n  const lowMid = Math.floor((array.length - 1) / 2)\n  const highMid = Math.ceil((array.length - 1) / 2)\n  return (array[lowMid] + array[highMid]) / 2\n}\n\n/**\n * @function averageInArray\n * @param {Array<Number>} arr array of Numbers\n * @param {Boolean} withZero\n * @returns {Number}\n */\nexport function averageInArray(arr, withZero) {\n  if (!Array.isArray(arr)) return typeof arr === 'number' ? arr : 0\n  const array = withZero ? arr.map(a => a || 0) : arr.filter(f => f)\n  return array.reduce((a, b) => a + b, 0) / array.length\n}\n","const g =\n  (typeof self === 'object' && self.self === self && self) ||\n  (typeof window === 'object' && window.window === window && window) ||\n  (typeof global === 'object' && global.global === global && global)\n\nexport default g\n","import glob from './glob'\n/* eslint-disable prefer-destructuring */\nexport const defaultForbidenChars = \"'@#$%¨&*()_+{}?^:><|¹²³£¢¬§ªº°;.,~´`=-\"\n/**\n * (string) Remove the first character\n * @function rmFirstChar\n * @param {String} str\n * @returns {String} string modified\n */\nexport function rmFirstChar(str) {\n  return str.slice(1)\n}\n\n/**\n * (string) Remove the last character\n * @function rmLastChar\n * @param {String} str\n * @returns {String} string modified\n */\nexport function rmLastChar(element) {\n  return element.slice(0, element.length - 1)\n}\n\n/**\n * (string) Primeira palavra da sentenca\n * @function firstWord\n * @param {String} text\n * @returns {String}\n * @example\n * firstWord('Leandro Sbrissa') // Leandro\n */\nexport function firstWord(text) {\n  if (!text) return ''\n  const fullName = text.trim().split(' ')\n  return fullName[0]\n}\n\n/**\n * (string) Ultima palavra da sentenca\n * @function lastWord\n * @param {String} text\n * @returns {String}\n * @example\n * lastWord('Leandro Sbrissa') // Sbrissa\n */\nexport function lastWord(text) {\n  if (!text) return ''\n  const fullName = text.trim().split(' ')\n  return fullName.slice(-1).join(' ')\n}\n\n/**\n * @function replaceAll\n * @param {String} str\n * @param {String} needle\n * @param {String} replacement\n * @example\n * replaceAll('T*T', '*', '_') // return 'T_T'\n */\nexport function replaceAll(str, needle, replacement) {\n  if (!str) return ''\n  if (Array.isArray(needle)) {\n    let rtn = `${str}`\n    for (let i = 0; i < needle.length; i++) {\n      rtn = replaceAll(rtn, needle[i], replacement)\n    }\n    return rtn\n  }\n  return str.split(needle).join(replacement)\n}\n\n/**\n * @function removeAll\n * @param {String|Array<string>} str\n * @param {String|Array<string>} chars\n * @returns {String|Array<string>}\n * @example\n * removeAll('TEST#$_', '#$_') // return 'TEST'\n */\nexport function removeAll(str, chars = defaultForbidenChars, replacement = '') {\n  if (!str) return ''\n  if (Array.isArray(str)) return str.map(r => removeAll(r, chars, replacement))\n  const c = Array.isArray(chars) ? chars : chars.split('')\n  let result = str\n  for (let i = 0; i < c.length; i++) result = replaceAll(result, c[i], replacement)\n  return result\n}\n\n/**\n * Primeiras letras em maiuscula\n * @function titleize\n * @param {String} text\n * @returns {String}\n * @example\n * titleize('teste de maiuscula') // Teste de Maiuscula\n */\nexport function titleize(text) {\n  if (!text) return ''\n  const cases = ['de', 'do', 'da', 'dos', 'das', 'a', 'o', 'as', 'os', 'e', 'di']\n  const words = text.toLowerCase().trim().split(' ')\n  return words\n    .map(w => {\n      if (cases.indexOf(w) < 0) {\n        return `${w[0].toUpperCase()}${w.slice(1)}`\n      }\n      return w\n    })\n    .join(' ')\n}\n\n/**\n * Verify if String is MAC address\n * @function isMAC\n * @param {String} strMac\n * @returns {Boolean}\n */\nexport function isMAC(strMac) {\n  if (!strMac) return false\n  if (strMac.indexOf(':') >= 0 && strMac.length !== 17) return false\n  if (strMac.indexOf(':') < 0 && strMac.length !== 12) return false\n  const re = /^[a-fA-F0-9:]{17}|[a-fA-F0-9]{12}$/g\n  return re.test(strMac)\n}\n\nexport function isHexReg(str) {\n  const re = /[0-9A-Fa-f]{6}/g\n  return re.test(str)\n  // re.lastIndex = 0; // be sure to reset the index after using .text()\n}\n\n// export function isHex(h) {\n//   const a = parseInt(h, 16)\n//   return a.toString(16) === h\n// }\n\n/**\n * @function extractHostname\n * @param {String} url\n * @returns {String}\n */\nexport function extractHostname(url) {\n  let hostname\n  if (url.indexOf('//') > -1) {\n    hostname = url.split('/')[2]\n  } else {\n    hostname = url.split('/')[0]\n  }\n  hostname = hostname.split(':')[0]\n  hostname = hostname.split('?')[0]\n  return hostname\n}\n\n/**\n * @function toMask\n * @param {string} mask\n * @param {Number|String} number alphanumeric\n * @returns {String}\n * @example\n * toMask('XXX-XXXX', ABC1234) // ABC-1234\n */\nexport function toMask(mask, number) {\n  if (!number) return ''\n  const s = `${number}`\n  let r = ''\n  for (let im = 0, is = 0; im < mask.length && is < s.length; im++) {\n    r += mask.charAt(im) === 'X' ? s.charAt(is++) : mask.charAt(im)\n  }\n  return r\n}\n\n/**\n * @function isValidTime\n * @param {string} str\n * @returns {Boolean}\n */\nexport function isValidTime(str) {\n  return /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(str)\n}\n\n/**\n * @function formatBytes\n * @param {number|string} bytes numero em bytes\n * @param {number} decimals casas decimais\n * @example\n * // formatBytes(bytes,decimals)\n * formatBytes(1024);       // 1 KB\n * formatBytes('1024');     // 1 KB\n * formatBytes(1234);       // 1.21 KB\n * formatBytes(1234, 3);    // 1.205 KB\n */\nexport function formatBytes(bytes, decimals = 2) {\n  if (!bytes || bytes === 0) return '0 Bytes'\n\n  const k = 1024\n  const b = bytes < 0 ? bytes * -1 : bytes\n  const dm = decimals < 0 ? 0 : decimals\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n\n  const i = Math.floor(Math.log(b) / Math.log(k))\n\n  return `${parseFloat((b / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`\n}\n\n/**\n * @function camelize\n * @param {String} str\n * {@link https://stackoverflow.com/questions/2970525/converting-any-string-into-camel-case StackOverflow}.\n * @example\n * camelize(\"EquipmentClass name\");\n * camelize(\"Equipment className\");\n * camelize(\"equipment class name\");\n * camelize(\"Equipment Class Name\");\n * // all output \"equipmentClassName\"\n */\nexport function camelize(str) {\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase()\n    })\n    .replace(/\\s+/g, '')\n}\n\n/**\n * @function urlEncodeObject\n * @param {any} object\n * @returns {string}\n * @example\n * urlEncodeObject({foo: 'fooValue', bar: 'barValue'}) // foo=fooValue&bar=barValue\n */\nexport function urlEncodeObject(object) {\n  if (typeof object !== 'object' || object instanceof Date) return ''\n  const result = []\n  Object.keys(object).forEach(k => {\n    const value = `${object[k]}`\n    glob && glob.encodeURIComponent && result.push(`${k}=${glob.encodeURIComponent(value)}`)\n  })\n  return result.length ? result.join('&') : ''\n}\n\n/**\n * @function isEmail\n * @param {String} value e-mail string\n * @returns {boolean}\n */\nexport function isEmail(value) {\n  // eslint-disable-next-line prefer-regex-literals\n  const reg = new RegExp(/^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/)\n  return value && reg.test(value)\n}\n\n/**\n * @function validURL\n * @param {string|Array<string>} str\n * @returns {boolean|Array<boolean>}\n * @example\n * validURL('http://example.com') // true\n * validURL(['http://example1.com', 'abcde']) // [true, false]\n */\nexport function validURL(str) {\n  if (Array.isArray(str)) return str.map(s => validURL(s))\n\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i'\n  )\n\n  return !!pattern.test(str)\n}\n","export function isModuleResolve(moduleName) {\n  try {\n    return !!require.resolve(moduleName)\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    return console.error(`'${moduleName}' is not found`) && false\n  }\n}\n\nexport function isDefined(v) {\n  try {\n    return !!(v !== null && v !== undefined)\n  } catch (error) {\n    return false\n  }\n}\n\nexport function notNull(value, defaultValue = true) {\n  return value === undefined || value === null ? defaultValue : value\n}\n\n/**\n * Convert Int To String(Hex)\n * @param {Number} int\n * @param {Number} size integer\n * @param {Boolean} noLeftZero\n * @returns {string} hex(number)\n */\nexport function intToHex(int, size, noLeftZero) {\n  const rmL = s => s.replace(/^0+/, '')\n  try {\n    const hex = Number(int).toString(16).toLocaleUpperCase()\n    const len = hex.length % 2 !== 0 ? hex.length + 1 : hex.length\n    return noLeftZero ? rmL(hex) : hex.padStart(size || len, '0')\n  } catch (e) {\n    const rtn = '00'\n    return noLeftZero ? rmL(rtn) : rtn.padStart(size || 2, '0')\n  }\n}\n\n/**\n * Convert Int To String(Hex)\n * @param {Number} int\n * @returns {string} hex(number)\n */\nexport function intToHex2(int) {\n  try {\n    const hex = Number(int).toString(16).toLocaleUpperCase()\n    const len = hex.length % 2 !== 0 ? hex.length + 1 : hex.length\n    return hex.padStart(len, '0')\n  } catch (e) {\n    return `0${(0).toString(16)}`.slice(-2).toUpperCase()\n  }\n}\n/**\n * @function tryInteger\n * @param {any} value\n * @returns {Number|False}\n */\nexport function tryInteger(value) {\n  const numero = parseInt(value, 10)\n  if (Number.isInteger(numero) || numero <= 0) return numero\n  return false\n}\n\n/**\n * Converte Hexadecimal em Alphanumeric String\n * @function hexToAlphaNumeric\n * @param {Buffer | String | Array<String>} hexx\n * @param {Boolean} preserve se true converte invalid ALPHANUMERIC in space\n * @returns {String} hexadecimal string\n * @example\n * hexToAlphaNumeric('414243') // return 'ABC'\n * hexToAlphaNumeric('413943', true) // return 'A C'\n */\nexport function hexToAlphaNumeric(hexx, preserve) {\n  try {\n    if (!hexx) return ''\n    let hex = ''\n    if (hexx instanceof Buffer) hex = hexx.toString('hex').toUpperCase()\n    if (Array.isArray(hexx)) hex = hexx.join('').toUpperCase()\n    hex = require('chunk')(hex, 2)\n    let result = ''\n    for (let i = 0; i < hex.length; i++) {\n      const h = hex[i]\n      const num = hexToInt(h)\n      if (preserve) {\n        result += num >= 40 && num <= 126 ? String.fromCharCode(num) : ' '\n      } else if (num >= 40 && num <= 126) result += String.fromCharCode(num)\n    }\n    return result\n  } catch (error) {\n    throw new Error('install module \"chunk\"')\n  }\n}\n\nexport function hex2a(hexx) {\n  const hex = hexx.toString() // force conversion\n  let str = ''\n  for (let i = 0; i < hex.length && hex.substr(i, 2) !== '00'; i += 2) {\n    str += String.fromCharCode(parseInt(hex.substr(i, 2), 16))\n  }\n  return str\n}\n\n/**\n * Convert HEX To String UTF-8\n * @param {Buffer} hex\n * @returns {string} ASCII(hex)\n */\nexport function hexToASC(hex) {\n  try {\n    if (hex instanceof Buffer) {\n      return hex.toString('utf8')\n    }\n    if (Array.isArray(hex)) return Buffer.from(hex.join(''), 'hex').toString('utf8')\n    return Buffer.from(hex, 'hex').toString('utf8')\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Convert ASCII To String(Hex)\n * @param {String} str\n * @returns {string} hex(number)\n */\nexport function ASCToHex(str) {\n  const arr1 = []\n  for (let n = 0, l = str.length; n < l; n++) {\n    const hex = Number(str.charCodeAt(n)).toString(16)\n    arr1.push(hex)\n  }\n  return arr1.join('')\n}\n\n/**\n * @function hexToInt\n * @param {String | Array} strhex\n * @returns {Number} decimal ASCII\n * @example\n * hexToInt('41'); // return 'A'\n * hexToInt(['41','42','43']); // return ['A','B','C']\n */\nexport function hexToInt(strhex) {\n  if (Array.isArray(strhex)) return strhex.map(item => hexToInt(item))\n  try {\n    const result = parseInt(strhex, 16)\n    return result\n  } catch (error) {\n    return 0\n  }\n}\n","// import _ from 'lodash'\nimport { forceArray } from './arrayts'\n\n/**\n * Simple object check.\n * @param item\n * @returns {boolean}\n */\nexport function isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item) && !(item instanceof Date)\n}\n\n// /**\n//  * Check if there is ownership in an object\n//  * @function objectHasKeys\n//  * @param {Object} obj\n//  * @param {Array<String>} keys\n//  * @returns {boolean}\n//  * @example\n//  * objectHasKeys({ a: 1, b: 2}, ['b','c']) // true match 'b'\n//  * objectHasKeys({ a: 1, b: 2}, ['c']) // false\n//  */\n// export function objectHasKeys(obj, keys) {\n//   const keysO = Object.keys(obj)\n//   const k = forceArray(keys)\n//   for (let i = 0; i < keysO.length; i++) {\n//     if (k.includes(keysO[i])) {\n//       return true\n//     }\n//   }\n//   return false\n// }\n\n/**\n * Get object by omitting properties\n * @function objectWithoutProperties\n * @param {Object} obj\n * @param {Array<string>} keys\n * @returns {Object}\n * @example\n * objectWithoutProperties({ a: 1, b: 2, c: 3 }, ['b'])\n * // return { a: 1, c: 3 }\n */\nexport function objectWithoutProperties(obj, keys) {\n  const target = {}\n  const keysO = Object.keys(obj)\n  for (let i = 0; i < keysO.length; i++) {\n    const k = keysO[i]\n    if (!keys.includes(k)) target[k] = obj[k]\n  }\n  return target\n}\n\n/**\n * Compares object and returns only existing keys\n * @function onlyWithProperties\n * @param {object|Array<object>} obj\n * @param {Array<string>|Object|string} keys\n * @returns {object|Array<object>}\n * @example\n * onlyWithProperties({ a: 1, b: 2, c: 3 }, ['b']) // produce { b: 2 }\n * onlyWithProperties({ a: 1, b: 2, c: 3 }, { b: 1 }) // produce { b: 2 }\n * onlyWithProperties({ a: 1, b: 2, c: 3 }, 'b') // produce { b: 2 }\n */\nexport function onlyWithProperties(obj, keys = []) {\n  if (Array.isArray(obj)) return obj.map(o => onlyWithProperties(o, keys))\n  if (typeof obj !== 'object') return {}\n\n  const target = {}\n  const keysCompare = []\n\n  if (Array.isArray(keys)) keys.forEach(k => keysCompare.push(k))\n  else if (typeof keys === 'object') Object.keys(keys).forEach(k => keysCompare.push(k))\n  else forceArray(keys).forEach(k => keysCompare.push(k))\n\n  Object.keys(obj).forEach(k => {\n    if (keysCompare.includes(k)) target[k] = obj[k]\n  })\n\n  return target\n}\n\n/**\n * @typedef {Object} replaceObjectOptions\n * @property {Boolean} clone clone this\n * @property {Boolean} inc incremental keys\n */\n\n/**\n * Replace object values\n * @function replaceObject\n * @param {Object} dest\n * @param {Object} src\n * @param {replaceObjectOptions} options\n * @returns {Object} object affected\n */\n// export function replaceObject(dest, src, options) {\n//   if (!dest || !src) return false\n//   const funcCopy = value => (options && options.clone ? _.cloneDeep(value) : value)\n\n//   Object.keys(src).forEach(key => {\n//     if ((options && options.inc) || key in dest) {\n//       // eslint-disable-next-line no-param-reassign\n//       dest[key] = funcCopy(src[key])\n//     }\n//   })\n\n//   return dest\n// }\n\n/**\n * Sorts array of objects\n * credits: https://www.sitepoint.com/sort-an-array-of-objects-in-javascript/\n * @function compareValues\n * @param {String} key\n * @param {String} order\n * @example\n * myArray.sort(compareValues('name', 'desc'));\n */\nexport function compareValues(key, order = 'asc') {\n  return function innerSort(a, b) {\n    if (!(key in a) || !(key in b)) return 0\n    const varA = typeof a[key] === 'string' ? a[key].toUpperCase() : a[key]\n    const varB = typeof b[key] === 'string' ? b[key].toUpperCase() : b[key]\n\n    let comparison = 0\n    if (varA > varB) {\n      comparison = 1\n    } else if (varA < varB) {\n      comparison = -1\n    }\n    return order === 'desc' ? comparison * -1 : comparison\n  }\n}\n\n/**\n * Deep merge objects.\n * @param target\n * @param sources\n */\nexport function mergeDeep(target, ...sources) {\n  if (!sources.length) return target\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    const keys = Object.keys(source)\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} })\n        mergeDeep(target[key], source[key])\n      } else {\n        Object.assign(target, { [key]: source[key] })\n      }\n    }\n  }\n  return mergeDeep(target, ...sources)\n}\n","import { isModuleResolve } from './variables'\n\n/**\n * Returns a random number between min (inclusive) and max (exclusive)\n * @function getRandomArbitrary\n * @returns {number}\n */\nexport function getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * @function getRandomInt\n * @param {number} min integer\n * @param {number} max integer\n * @returns {number}\n */\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n/**\n * Gerar caracteres aleatorios\n * @function getRamdomStr\n * @param {Number} len tamanho\n * @param {String} wishlist lista de caracteres para utilizar\n * @example\n * getRamdomStr(4,'0123ABCDEF')\n */\nexport function getRamdomStr(len, whitelist = '123456789ABCEFGHKMPQRSTXYZ') {\n  try {\n    const getRandomValues = isModuleResolve('get-random-values') && require('get-random-values')\n    return (\n      getRandomValues &&\n      Array(len)\n        .fill('')\n        .map(() => {\n          // eslint-disable-next-line no-mixed-operators\n          const q = Math.floor(\n            (getRandomValues(new Uint8Array(1))[0] / (0xff + 1)) * whitelist.length\n          )\n          return whitelist[q]\n        })\n        .join('')\n    )\n  } catch {\n    throw new Error('install module \"get-random-values\"')\n  }\n}\n\nexport function getInRamdom(object) {\n  if (Array.isArray(object)) {\n    return getInRamdom(object[getRandomInt(0, object.length - 1)])\n  }\n\n  if (typeof object === 'object') {\n    const arrKeys = Object.keys(object)\n    const key = arrKeys[getRandomInt(0, arrKeys.length - 1)]\n    if (key in object) return object[key]\n  }\n\n  if (typeof object === 'function') return getInRamdom(object())\n\n  const arrstr = (object || '123456789ABCEFGHKMPQRSTXYZ').toString().split('')\n  return arrstr[getRandomInt(0, arrstr.length - 1)]\n}\n\n/**\n * @function getRamdomHex\n * @param {Number} size - integer (default 16)\n * @returns {String} - HEX\n * @example\n * getRamdomHex() // c05662d445cd3988402521922ba16e29\n */\nexport function getRamdomHex(size = 16) {\n  const { randomBytes } = require('crypto')\n  const result = randomBytes(size)\n  return result.toString('hex')\n}\n\nexport function generateIdPass(payload, secret = '') {\n  const { v4: uuid } = require('uuid')\n  const md5 = require('md5')\n  const uid = uuid()\n\n  const p = JSON.stringify(payload)\n  return md5(`${uid}${p}${secret}${getRamdomHex()}`)\n}\n\n/**\n * @function hashPassword\n * @param {String} payload\n * @param {String} secret\n * @returns {String} HASH MD5\n */\nexport function hashPassword(payload, secret = '') {\n  try {\n    const md5 = require('md5')\n    return md5(`${payload}${secret}`)\n  } catch {\n    // eslint-disable-next-line no-throw-literal\n    throw new Error('install module \"md5\"')\n  }\n}\n\n/**\n * @function hashMD5\n * @param {String} str\n * @param {Boolean} toBuffer\n */\nexport function hashMD5(str, toBuffer) {\n  try {\n    const md5 = require('md5')\n    const hash = md5(`${str}`)\n    return toBuffer ? Buffer.from(require('chunk')(hash, 2)) : hash\n  } catch {\n    throw new Error('hashMd5 needs the \"chunk\" and \"md5\" dependencies')\n  }\n}\n\n/**\n * @function isMD5\n * @param {String} inputString\n */\nexport function isMD5(inputString) {\n  // if (typeof inputString !== 'string') return false;\n  return /[a-fA-F0-9]{32}/.test(inputString)\n}\n","import moment from 'moment-timezone'\n\n/**\n * @function timeRest\n * @param {Number} inMinutes integer\n */\nexport function timeRest(inMinutes) {\n  const minutes = inMinutes < 0 ? inMinutes * -1 : inMinutes\n  const minutos = 1\n  const horas = 60 // minuto * 60\n  const dias = 1440 // hora * 24\n  const semanas = 10080 // dias * 7\n  const meses = 302400 // semanas * 4\n  const anos = 3628800 // meses * 12\n\n  // let valorInicio = parseInt(minutes, 10) || 0;\n  let valorInicio = minutes\n  let result = ''\n\n  if (valorInicio > anos) {\n    const ano = Math.floor(valorInicio / anos)\n    result += `${ano}y `\n    valorInicio -= anos * ano\n  }\n\n  if (valorInicio > meses) {\n    const mes = Math.floor(valorInicio / meses)\n    result += `${mes}mo `\n    valorInicio -= meses * mes\n  }\n\n  if (valorInicio > semanas) {\n    const semana = Math.floor(valorInicio / semanas)\n    result += `${semana}se `\n    valorInicio -= semanas * semana\n  }\n\n  if (valorInicio > dias) {\n    const dia = Math.floor(valorInicio / dias)\n    result += `${dia}d `\n    valorInicio -= dias * dia\n  }\n\n  if (valorInicio > horas) {\n    const hora = Math.floor(valorInicio / horas)\n    result += `${hora}h `\n    valorInicio -= horas * hora\n  }\n\n  if (valorInicio > minutos) {\n    const minuto = Math.floor(valorInicio / minutos)\n    result += `${minuto}m`\n  } else if (valorInicio > 0) {\n    const mm = valorInicio * 60\n    result += `${Math.floor(mm)}seg`\n  }\n\n  // const minuto = valorInicio;\n  // result += `${minuto}m `;\n\n  return result\n}\n\nexport function getUpTime(init) {\n  const ms = moment().diff(moment(init, 'YYYY-MM-DD HH:mm:ss'))\n  return timeRest(moment.duration(ms).asMinutes()) || 0\n}\n\n/**\n * @function diffExpires\n * @param {number} expires\n * @param {number} dateNow\n * @returns {number} minutes\n */\nexport function diffExpires(expires, dateNow = Date.now()) {\n  const ms = moment(expires).diff(moment(dateNow))\n  return moment.duration(ms).asMinutes()\n}\n\n/**\n * @function dateToStrTimeZone\n * @param {String|Date} date\n * @param {String} to date format\n * @param {String} timezone\n * @returns {String} data formated (to)\n * @example\n * dateToStrTimeZone(new Date(), 'YYYY-MM-DD HH:mm:ss', 'America/Fortaleza');\n */\nexport function dateToStrTimeZone(\n  date,\n  to = 'YYYY-MM-DD HH:mm:ss',\n  timezone = 'America/Fortaleza'\n) {\n  if (!timezone) return moment(date).format(to)\n  return moment(date).tz(timezone).format(to)\n}\n\n/**\n *\n * @param {String} strdate\n * @param {String} from date format\n * @param {String} to date format\n * @returns {String} data formated (to)\n * @example\n * strDateFromTo('01/12/19', 'DD/MM/YY', 'YYY-MM-DD')\n */\nexport function strDateFromTo(strdate, from, to = 'YYYY-MM-DD HH:mm:ss') {\n  if (!strdate) return moment().format(to)\n  if (strdate instanceof Date) return moment(strdate).format(to)\n  if (moment.isMoment(strdate)) return strdate.format(to)\n\n  return moment(strdate, from).format(to)\n}\n\n/**\n *\n * @param {*} date\n * @param {*} format\n */\nexport function rangedMonth(date, format) {\n  const r = {\n    start: moment(date).startOf('month'),\n    end: moment(date).endOf('month')\n  }\n\n  if (typeof format === 'boolean') {\n    if (format) return { start: r.start, end: r.end }\n    return { start: r.toDate(), end: r.toDate() }\n  }\n\n  const defFormat = format || 'YYYY-MM-DD HH:mm:ss'\n  return {\n    start: moment(date).startOf('month').format(defFormat),\n    end: moment(date).endOf('month').format(defFormat)\n  }\n}\n\n/**\n * @function extractOfDateTime\n * @param {Date|String} datetime - string YYYY-MM-DD HH:mm:ss\n * @param {String} format date format ex: 'YYYY-MM-DD HH:mm:ss'\n * @param {String} timezone\n */\nexport function extractOfDateTime(datetime, format, timezone) {\n  const all = dateToStrTimeZone(datetime, format, timezone)\n  const spliter = all.split(' ')\n  const time = spliter.length > 1 ? spliter[1] : '00:00:00'\n  const date = spliter.length > 0 ? spliter[0] : 'Invalid date'\n  return {\n    date,\n    time\n  }\n}\n"],"names":["range","begin","end","interval","i","g","self","window","global","replaceAll","str","needle","replacement","Array","isArray","rtn","length","split","join","isDefined","v","error","hexToInt","strhex","map","item","parseInt","isObject","Date","getRandomInt","min","max","Math","ceil","floor","random","getRamdomHex","size","randomBytes","require","toString","timeRest","inMinutes","dias","semanas","meses","anos","valorInicio","result","ano","mes","semana","dia","hora","mm","dateToStrTimeZone","date","to","timezone","moment","tz","format","arr1","n","l","hex","Number","charCodeAt","push","arr","withZero","array","a","filter","f","reduce","b","buf","Buffer","chunk","replace","word","index","toLowerCase","toUpperCase","key","order","varA","varB","comparison","expires","dateNow","now","ms","diff","duration","asMinutes","url","hostname","indexOf","datetime","spliter","time","text","trim","bytes","decimals","dm","log","parseFloat","pow","toFixed","payload","secret","v4","uuid","md5","JSON","stringify","getInRamdom","object","arrKeys","Object","keys","arrstr","len","whitelist","getRandomValues","moduleName","resolve","e","console","isModuleResolve","fill","q","Uint8Array","Error","init","toBuffer","hash","from","hexx","substr","String","fromCharCode","preserve","num","int","noLeftZero","rmL","s","toLocaleUpperCase","padStart","slice","value","reg","RegExp","test","strMac","inputString","sort","lowMid","highMid","mergeDeep","target","sources","source","shift","assign","defaultValue","obj","keysO","k","includes","onlyWithProperties","o","keysCompare","forEach","forceArray","r","start","startOf","endOf","toDate","defFormat","removeAll","chars","c","element","strdate","isMoment","cases","w","mask","number","im","is","charAt","numero","isInteger","glob","encodeURIComponent","validURL"],"mappings":"yUAmBO,SAAUA,EAAMC,EAAOC,EAAKC,EAAW,OACvC,IAAIC,EAAIH,EAAOG,GAAKF,EAAKE,GAAKD,QAC3BC,8CCrBV,MAAMC,EACa,iBAATC,MAAqBA,KAAKA,OAASA,MAAQA,MAChC,iBAAXC,QAAuBA,OAAOA,SAAWA,QAAUA,QACxC,iBAAXC,QAAuBA,OAAOA,SAAWA,QAAUA,OCwDtD,SAASC,EAAWC,EAAKC,EAAQC,OACjCF,EAAK,MAAO,MACbG,MAAMC,QAAQH,GAAS,KACrBI,EAAO,GAAEL,QACR,IAAIN,EAAI,EAAGA,EAAIO,EAAOK,OAAQZ,IACjCW,EAAMN,EAAWM,EAAKJ,EAAOP,GAAIQ,UAE5BG,SAEFL,EAAIO,MAAMN,GAAQO,KAAKN,GC3DzB,SAASO,EAAUC,qBAEZA,GACV,MAAOC,UACA,GAmIJ,SAASC,EAASC,MACnBV,MAAMC,QAAQS,GAAS,OAAOA,EAAOC,KAAIC,GAAQH,EAASG,gBAE7CC,SAASH,EAAQ,IAEhC,MAAOF,UACA,GC9IJ,SAASM,EAASF,UAChBA,GAAwB,iBAATA,IAAsBZ,MAAMC,QAAQW,MAAWA,aAAgBG,MCShF,SAASC,EAAaC,EAAKC,UAChCD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,EAwDhD,SAASM,EAAaC,EAAO,UAC5BC,YAAEA,GAAgBC,QAAQ,iBACjBD,EAAYD,GACbG,SAAS,OC1ElB,SAASC,EAASC,SAIjBC,EAAO,KACPC,EAAU,MACVC,EAAQ,OACRC,EAAO,YAGTC,EATYL,EAAY,GAAiB,EAAbA,EAAiBA,EAU7CM,EAAS,MAETD,EAAcD,EAAM,OAChBG,EAAMjB,KAAKE,MAAMa,EAAcD,GACrCE,GAAW,GAAEC,MACbF,GAAeD,EAAOG,KAGpBF,EAAcF,EAAO,OACjBK,EAAMlB,KAAKE,MAAMa,EAAcF,GACrCG,GAAW,GAAEE,OACbH,GAAeF,EAAQK,KAGrBH,EAAcH,EAAS,OACnBO,EAASnB,KAAKE,MAAMa,EAAcH,GACxCI,GAAW,GAAEG,OACbJ,GAAeH,EAAUO,KAGvBJ,EAAcJ,EAAM,OAChBS,EAAMpB,KAAKE,MAAMa,EAAcJ,GACrCK,GAAW,GAAEI,MACbL,GAAeJ,EAAOS,KAGpBL,EAlCU,GAkCW,OACjBM,EAAOrB,KAAKE,MAAMa,EAnCZ,IAoCZC,GAAW,GAAEK,MACbN,GArCY,GAqCWM,KAGrBN,EAzCY,EAyCW,CAEzBC,GAAW,GADIhB,KAAKE,MAAMa,EA1CZ,WA4CT,GAAIA,EAAc,EAAG,OACpBO,EAAmB,GAAdP,EACXC,GAAW,GAAEhB,KAAKE,MAAMoB,eAMnBN,EA4BF,SAASO,EACdC,EACAC,EAAK,sBACLC,EAAW,4BAENA,EACEC,UAAOH,GAAMI,GAAGF,GAAUG,OAAOJ,GADlBE,UAAOH,GAAMK,OAAOJ,oBHkCrC,SAAkB/C,SACjBoD,EAAO,OACR,IAAIC,EAAI,EAAGC,EAAItD,EAAIM,OAAQ+C,EAAIC,EAAGD,IAAK,OACpCE,EAAMC,OAAOxD,EAAIyD,WAAWJ,IAAIvB,SAAS,IAC/CsB,EAAKM,KAAKH,UAELH,EAAK5C,KAAK,4BHvEZ,SAAwBmD,EAAKC,OAC7BzD,MAAMC,QAAQuD,GAAM,MAAsB,iBAARA,EAAmBA,EAAM,QAC1DE,EAAQD,EAAWD,EAAI7C,KAAIgD,GAAKA,GAAK,IAAKH,EAAII,QAAOC,GAAKA,WACzDH,EAAMI,QAAO,CAACH,EAAGI,IAAMJ,EAAII,GAAG,GAAKL,EAAMvD,4BAlC3C,SAAqB6D,EAAKxC,EAAO,UACjCwC,EAEDA,aAAeC,OACVC,EAAMF,EAAIrC,SAAS,OAAQH,GAEhCxB,MAAMC,QAAQ+D,GAAaA,EACxBE,EAAMF,EAAIG,QAAQ,KAAM,IAAK3C,GANnB,qBEsLZ,SAAkB3B,UAChBA,EACJsE,QAAQ,uBAAuB,CAACC,EAAMC,IACpB,IAAVA,EAAcD,EAAKE,cAAgBF,EAAKG,gBAEhDJ,QAAQ,OAAQ,2BEpGd,SAAuBK,EAAKC,EAAQ,cAClC,SAAmBd,EAAGI,QACrBS,KAAOb,MAAQa,KAAOT,GAAI,OAAO,QACjCW,EAAyB,iBAAXf,EAAEa,GAAoBb,EAAEa,GAAKD,cAAgBZ,EAAEa,GAC7DG,EAAyB,iBAAXZ,EAAES,GAAoBT,EAAES,GAAKD,cAAgBR,EAAES,OAE/DI,EAAa,SACbF,EAAOC,EACTC,EAAa,EACJF,EAAOC,IAChBC,GAAc,GAEC,SAAVH,GAAiC,EAAdG,EAAkBA,6DFjIZ,0JIwE7B,SAAqBC,EAASC,EAAU/D,KAAKgE,aAC5CC,EAAKlC,UAAO+B,GAASI,KAAKnC,UAAOgC,WAChChC,UAAOoC,SAASF,GAAIG,qCJgEtB,SAAyBC,OAC1BC,SAEFA,EADED,EAAIE,QAAQ,OAAS,EACZF,EAAIhF,MAAM,KAAK,GAEfgF,EAAIhF,MAAM,KAAK,GAE5BiF,EAAWA,EAASjF,MAAM,KAAK,GAC/BiF,EAAWA,EAASjF,MAAM,KAAK,GACxBiF,6BINF,SAA2BE,EAAUvC,EAAQH,SAE5C2C,EADM9C,EAAkB6C,EAAUvC,EAAQH,GAC5BzC,MAAM,KACpBqF,EAAOD,EAAQrF,OAAS,EAAIqF,EAAQ,GAAK,iBAExC,CACL7C,KAFW6C,EAAQrF,OAAS,EAAIqF,EAAQ,GAAK,eAG7CC,KAAAA,sBJvHG,SAAmBC,UACnBA,EACYA,EAAKC,OAAOvF,MAAM,KACnB,GAFE,6CA8Jb,SAAqBwF,EAAOC,EAAW,OACvCD,GAAmB,IAAVA,EAAa,MAAO,gBAG5B7B,EAAI6B,EAAQ,GAAa,EAATA,EAAaA,EAC7BE,EAAKD,EAAW,EAAI,EAAIA,EAGxBtG,EAAI4B,KAAKE,MAAMF,KAAK4E,IAAIhC,GAAK5C,KAAK4E,IAL9B,aAOF,GAAEC,YAAYjC,EAAI5C,KAAK8E,IAPrB,KAO4B1G,IAAI2G,QAAQJ,OAJpC,CAAC,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAIFvG,6BGrH3D,SAAwB4G,EAASC,EAAS,UACvCC,GAAIC,GAAS5E,QAAQ,eACjBA,QAAQ,MAIb6E,CAAK,GAHAD,MAEFE,KAAKC,UAAUN,KACDC,IAAS7E,4BApC5B,SAASmF,EAAYC,MACtB3G,MAAMC,QAAQ0G,UACTD,EAAYC,EAAO3F,EAAa,EAAG2F,EAAOxG,OAAS,QAGtC,iBAAXwG,EAAqB,OACxBC,EAAUC,OAAOC,KAAKH,GACtBnC,EAAMoC,EAAQ5F,EAAa,EAAG4F,EAAQzG,OAAS,OACjDqE,KAAOmC,EAAQ,OAAOA,EAAOnC,MAGb,mBAAXmC,EAAuB,OAAOD,EAAYC,WAE/CI,GAAUJ,GAAU,8BAA8BhF,WAAWvB,MAAM,WAClE2G,EAAO/F,EAAa,EAAG+F,EAAO5G,OAAS,iDAnCzC,SAAsB6G,EAAKC,EAAY,wCAEpCC,EFlCH,SAAyBC,eAEnBzF,QAAQ0F,QAAQD,GACzB,MAAOE,UAEAC,QAAQ9G,MAAO,IAAG2G,qBAA+B,GE6BhCI,CAAgB,sBAAwB7F,QAAQ,4BAEtEwF,GACAlH,MAAMgH,GACHQ,KAAK,IACL7G,KAAI,WAEG8G,EAAItG,KAAKE,MACZ6F,EAAgB,IAAIQ,WAAW,IAAI,OAAmBT,EAAU9G,eAE5D8G,EAAUQ,MAElBpH,KAAK,IAEV,YACM,IAAIsH,MAAM,mEA1Cb,SAA4B1G,EAAKC,UAC/BC,KAAKG,UAAYJ,EAAMD,GAAOA,4CCuDhC,SAAmB2G,SAClB5C,EAAKlC,YAASmC,KAAKnC,UAAO8E,EAAM,+BAC/BhG,EAASkB,UAAOoC,SAASF,GAAIG,cAAgB,gFDgD/C,SAAiBtF,EAAKgI,aAGnBC,EADMpG,QAAQ,MACP6E,CAAK,GAAE1G,YACbgI,EAAW5D,OAAO8D,KAAKrG,QAAQ,QAARA,CAAiBoG,EAAM,IAAMA,EAC3D,YACM,IAAIH,MAAM,2EArBb,SAAsBxB,EAASC,EAAS,eAE/B1E,QAAQ,MACb6E,CAAK,GAAEJ,IAAUC,KACxB,YAEM,IAAIuB,MAAM,wCFRb,SAAeK,SACd5E,EAAM4E,EAAKrG,eACb9B,EAAM,OACL,IAAIN,EAAI,EAAGA,EAAI6D,EAAIjD,QAA+B,OAArBiD,EAAI6E,OAAO1I,EAAG,GAAaA,GAAK,EAChEM,GAAOqI,OAAOC,aAAatH,SAASuC,EAAI6E,OAAO1I,EAAG,GAAI,YAEjDM,oBAQF,SAAkBuD,cAEjBA,aAAea,OACVb,EAAIzB,SAAS,QAElB3B,MAAMC,QAAQmD,GAAaa,OAAO8D,KAAK3E,EAAI/C,KAAK,IAAK,OAAOsB,SAAS,QAClEsC,OAAO8D,KAAK3E,EAAK,OAAOzB,SAAS,QACxC,MAAOnB,SACA,+BA3CJ,SAA2BwH,EAAMI,WAE/BJ,EAAM,MAAO,OACd5E,EAAM,GACN4E,aAAgB/D,SAAQb,EAAM4E,EAAKrG,SAAS,OAAO4C,eACnDvE,MAAMC,QAAQ+H,KAAO5E,EAAM4E,EAAK3H,KAAK,IAAIkE,eAC7CnB,EAAM1B,QAAQ,QAARA,CAAiB0B,EAAK,OACxBjB,EAAS,OACR,IAAI5C,EAAI,EAAGA,EAAI6D,EAAIjD,OAAQZ,IAAK,OAE7B8I,EAAM5H,EADF2C,EAAI7D,IAEV6I,EACFjG,GAAUkG,GAAO,IAAMA,GAAO,IAAMH,OAAOC,aAAaE,GAAO,IACtDA,GAAO,IAAMA,GAAO,MAAKlG,GAAU+F,OAAOC,aAAaE,WAE7DlG,EACP,MAAO3B,SACD,IAAImH,MAAM,gEAhEb,SAAkBW,EAAK9G,EAAM+G,SAC5BC,EAAMC,GAAKA,EAAEtE,QAAQ,MAAO,cAE1Bf,EAAMC,OAAOiF,GAAK3G,SAAS,IAAI+G,oBAC/B1B,EAAM5D,EAAIjD,OAAS,GAAM,EAAIiD,EAAIjD,OAAS,EAAIiD,EAAIjD,cACjDoI,EAAaC,EAAIpF,GAAOA,EAAIuF,SAASnH,GAAQwF,EAAK,KACzD,MAAOK,SACDnH,EAAM,YACLqI,EAAaC,EAAItI,GAAOA,EAAIyI,SAASnH,GAAQ,EAAG,yBASpD,SAAmB8G,aAEhBlF,EAAMC,OAAOiF,GAAK3G,SAAS,IAAI+G,oBAC/B1B,EAAM5D,EAAIjD,OAAS,GAAM,EAAIiD,EAAIjD,OAAS,EAAIiD,EAAIjD,cACjDiD,EAAIuF,SAAS3B,EAAK,KACzB,MAAOK,SACC,KAAI,GAAG1F,SAAS,MAAMiH,OAAO,GAAGrE,oDDiMrC,SAAiBsE,SAEhBC,EAAM,IAAIC,OAAO,yDAChBF,GAASC,EAAIE,KAAKH,qBA3HpB,SAAkBhJ,SACZ,kBACDmJ,KAAKnJ,kBAVV,SAAeoJ,WACfA,MACDA,EAAO3D,QAAQ,MAAQ,GAAuB,KAAlB2D,EAAO9I,YACnC8I,EAAO3D,QAAQ,KAAO,GAAuB,KAAlB2D,EAAO9I,SAC3B,sCACD6I,KAAKC,oBGMV,SAAeC,SAEb,kBAAkBF,KAAKE,mJH8CzB,SAAqBrJ,SACnB,oDAAoDmJ,KAAKnJ,qBAnI3D,SAAkB6F,UAClBA,EACYA,EAAKC,OAAOvF,MAAM,KACnBwI,OAAO,GAAGvI,KAAK,KAFb,0BFCb,SAAuBmD,EAAKC,GAAW,OACvCzD,MAAMC,QAAQuD,GAAM,MAAsB,iBAARA,EAAmBA,EAAM,QAC1DE,EAAQD,EAAWD,EAAI7C,KAAIgD,GAAKA,GAAK,IAAKH,EAAII,QAAOD,MAAQA,GAAKA,EAAI,KAC5ED,EAAMyF,MAAK,CAACxF,EAAGI,IAAMJ,EAAII,UACnBqF,EAASjI,KAAKE,OAAOqC,EAAMvD,OAAS,GAAK,GACzCkJ,EAAUlI,KAAKC,MAAMsC,EAAMvD,OAAS,GAAK,UACvCuD,EAAM0F,GAAU1F,EAAM2F,IAAY,qBIuFrC,SAASC,EAAUC,KAAWC,OAC9BA,EAAQrJ,OAAQ,OAAOoJ,QACtBE,EAASD,EAAQE,WAEnB5I,EAASyI,IAAWzI,EAAS2I,GAAS,OAClC3C,EAAOD,OAAOC,KAAK2C,OACpB,IAAIlK,EAAI,EAAGA,EAAIuH,EAAK3G,OAAQZ,IAAK,OAC9BiF,EAAMsC,EAAKvH,GACbuB,EAAS2I,EAAOjF,KACb+E,EAAO/E,IAAMqC,OAAO8C,OAAOJ,EAAQ,EAAG/E,GAAM,KACjD8E,EAAUC,EAAO/E,GAAMiF,EAAOjF,KAE9BqC,OAAO8C,OAAOJ,EAAQ,EAAG/E,GAAMiF,EAAOjF,aAIrC8E,EAAUC,KAAWC,sMD3IvB,SAAiBX,EAAOe,GAAe,UACrCf,MAAAA,EAAwCe,EAAef,gKCyBzD,SAAiCgB,EAAK/C,SACrCyC,EAAS,GACTO,EAAQjD,OAAOC,KAAK+C,OACrB,IAAItK,EAAI,EAAGA,EAAIuK,EAAM3J,OAAQZ,IAAK,OAC/BwK,EAAID,EAAMvK,GACXuH,EAAKkD,SAASD,KAAIR,EAAOQ,GAAKF,EAAIE,WAElCR,8BAcF,SAASU,EAAmBJ,EAAK/C,EAAO,OACzC9G,MAAMC,QAAQ4J,GAAM,OAAOA,EAAIlJ,KAAIuJ,GAAKD,EAAmBC,EAAGpD,QAC/C,iBAAR+C,EAAkB,MAAO,SAE9BN,EAAS,GACTY,EAAc,UAEhBnK,MAAMC,QAAQ6G,GAAOA,EAAKsD,SAAQL,GAAKI,EAAY5G,KAAKwG,KACnC,iBAATjD,EAAmBD,OAAOC,KAAKA,GAAMsD,SAAQL,GAAKI,EAAY5G,KAAKwG,KAC9EM,EAAWvD,GAAMsD,SAAQL,GAAKI,EAAY5G,KAAKwG,KAEpDlD,OAAOC,KAAK+C,GAAKO,SAAQL,IACnBI,EAAYH,SAASD,KAAIR,EAAOQ,GAAKF,EAAIE,OAGxCR,yGEwCF,SAAqB5G,EAAMK,SAC1BsH,EAAI,CACRC,MAAOzH,UAAOH,GAAM6H,QAAQ,SAC5BnL,IAAKyD,UAAOH,GAAM8H,MAAM,aAGJ,kBAAXzH,SACLA,EAAe,CAAEuH,MAAOD,EAAEC,MAAOlL,IAAKiL,EAAEjL,KACrC,CAAEkL,MAAOD,EAAEI,SAAUrL,IAAKiL,EAAEI,gBAG/BC,EAAY3H,GAAU,4BACrB,CACLuH,MAAOzH,UAAOH,GAAM6H,QAAQ,SAASxH,OAAO2H,GAC5CtL,IAAKyD,UAAOH,GAAM8H,MAAM,SAASzH,OAAO2H,uBJtDrC,SAASC,EAAU/K,EAAKgL,EA7EK,yCA6EyB9K,EAAc,QACpEF,EAAK,MAAO,MACbG,MAAMC,QAAQJ,GAAM,OAAOA,EAAIc,KAAI2J,GAAKM,EAAUN,EAAGO,EAAO9K,WAC1D+K,EAAI9K,MAAMC,QAAQ4K,GAASA,EAAQA,EAAMzK,MAAM,QACjD+B,EAAStC,MACR,IAAIN,EAAI,EAAGA,EAAIuL,EAAE3K,OAAQZ,IAAK4C,EAASvC,EAAWuC,EAAQ2I,EAAEvL,GAAIQ,UAC9DoC,4CA5EF,SAAqBtC,UACnBA,EAAI+I,MAAM,uBASZ,SAAoBmC,UAClBA,EAAQnC,MAAM,EAAGmC,EAAQ5K,OAAS,6QIsFpC,SAAuB6K,EAASjD,EAAMnF,EAAK,8BAC3CoI,EACDA,aAAmBjK,KAAa+B,UAAOkI,GAAShI,OAAOJ,GACvDE,UAAOmI,SAASD,GAAiBA,EAAQhI,OAAOJ,GAE7CE,UAAOkI,EAASjD,GAAM/E,OAAOJ,GAJfE,YAASE,OAAOJ,4LJXhC,SAAkB8C,OAClBA,EAAM,MAAO,SACZwF,EAAQ,CAAC,KAAM,KAAM,KAAM,MAAO,MAAO,IAAK,IAAK,KAAM,KAAM,IAAK,aAC5DxF,EAAKpB,cAAcqB,OAAOvF,MAAM,KAE3CO,KAAIwK,GACCD,EAAM5F,QAAQ6F,GAAK,EACb,GAAEA,EAAE,GAAG5G,gBAAgB4G,EAAEvC,MAAM,KAElCuC,IAER9K,KAAK,qBAqDH,SAAgB+K,EAAMC,OACtBA,EAAQ,MAAO,SACd5C,EAAK,GAAE4C,QACTf,EAAI,OACH,IAAIgB,EAAK,EAAGC,EAAK,EAAGD,EAAKF,EAAKjL,QAAUoL,EAAK9C,EAAEtI,OAAQmL,IAC1DhB,GAAyB,MAApBc,EAAKI,OAAOF,GAAc7C,EAAE+C,OAAOD,KAAQH,EAAKI,OAAOF,UAEvDhB,sBC5GF,SAAoBzB,SACnB4C,EAAS5K,SAASgI,EAAO,aAC3BxF,OAAOqI,UAAUD,IAAWA,GAAU,IAAUA,mBHtD/C,SAAiBjI,UACjBxD,MAAMC,QAAQuD,GACfA,EAAIrD,OAAS,GAAUqD,EAAI,GADCA,2BE6N3B,SAAyBmD,MACR,iBAAXA,GAAuBA,aAAkB5F,KAAM,MAAO,SAC3DoB,EAAS,UACf0E,OAAOC,KAAKH,GAAQyD,SAAQL,UACpBlB,EAAS,GAAElC,EAAOoD,KACxB4B,GAAQA,EAAKC,oBAAsBzJ,EAAOoB,KAAM,GAAEwG,KAAK4B,EAAKC,mBAAmB/C,SAE1E1G,EAAOhC,OAASgC,EAAO9B,KAAK,KAAO,qBAsBrC,SAASwL,EAAShM,UACnBG,MAAMC,QAAQJ,GAAaA,EAAIc,KAAI8H,GAAKoD,EAASpD,OAErC,IAAIM,OAClB,wKAMA,KAGeC,KAAKnJ"}