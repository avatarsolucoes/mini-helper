{"version":3,"file":"index.js","sources":["../src/array.js","../src/glob.js","../src/string.js","../src/variables.js","../src/object.js","../src/ramdom.js","../src/date.js","../src/file.js","../src/number.js","../src/image.js"],"sourcesContent":["import chunk from 'chunk'\nimport { forceArray } from './arrayts'\n\n// /**\n//  * Force any values an array\n//  * @function forceArray\n//  * @param {any} value\n//  * @return {Array}\n//  * @example\n//  * forceArray('1') // return ['1']\n//  */\n// export function forceArray(value = []) {\n//   return !Array.isArray(value) ? [value] : value\n// }\n\n/**\n * If array return first item\n * @function unArray\n * @param {Array} arr\n */\nexport function unArray(arr) {\n  if (!Array.isArray(arr)) return arr\n  if (arr.length > 0) return arr[0]\n  return false\n}\n\n/**\n * @function range\n * @param {Number} begin\n * @param {Number} end\n * @param {Number} interval\n */\nexport function* range(begin, end, interval = 1) {\n  for (let i = begin; i <= end; i += interval) {\n    yield i\n  }\n}\n\n/**\n * @function rangeArray\n * @param {Number} init\n * @param {Number} fim\n * @param {Number} interval\n * @returns {Array<number>}\n * @example\n * rangeArray(1, 5, 1) // [1,2,3,4,5]\n */\nexport function rangeArray(init, fim, interval = 1) {\n  return Array.from(range(init, fim, interval))\n}\n\n/**\n * Convert Buffer in Array\n * @param {Buffer|ArrayBuffer|string} buf dataBuffer\n * @returns {Array} chunked\n * @example\n * buffToArray('A03B18') // return ['A0','3B','18']\n */\nexport function buffToArray(buf, size = 2) {\n  if (!buf) return []\n  if (buf instanceof Buffer) {\n    return chunk(buf.toString('hex'), size)\n  }\n  if (Array.isArray(buf)) return buf\n  return chunk(buf.replace(/ /g, ''), size)\n}\n\n/**\n * @function medianInArray\n * @param {Array<Number>} arr array of Numbers\n * @param {Boolean} withZero\n * @returns {Number}\n */\nexport function medianInArray(arr, withZero = false) {\n  if (!Array.isArray(arr)) return typeof arr === 'number' ? arr : 0\n  const array = withZero ? arr.map(a => a || 0) : arr.filter(a => !!(a && a > 0))\n  array.sort((a, b) => a - b)\n  const lowMid = Math.floor((array.length - 1) / 2)\n  const highMid = Math.ceil((array.length - 1) / 2)\n  return (array[lowMid] + array[highMid]) / 2\n}\n\n/**\n * @function averageInArray\n * @param {Array<Number>} arr array of Numbers\n * @param {Boolean} withZero\n * @returns {Number}\n */\nexport function averageInArray(arr, withZero) {\n  if (!Array.isArray(arr)) return typeof arr === 'number' ? arr : 0\n  const array = withZero ? arr.map(a => a || 0) : arr.filter(f => f)\n  return array.reduce((a, b) => a + b, 0) / array.length\n}\n\n/**\n * @function sumArray\n * @param {Array<Number>} arrOfNumber\n * @param {boolean} checkNumber\n * @returns {Number} sum\n * @example\n * var arr = [4, 2, 8, 6];\n * sumArray(arr) // return 20\n * sumArray(['1','teste', 2], true) // return 3\n */\nexport function sumArray(arrOfNumber, checkNumber) {\n  const sum = (t, n) => {\n    if (n && typeof n === 'number' && n !== 0) return t + n\n    if (n && typeof n === 'string' && checkNumber) return t + (parseInt(n, 10) || 0)\n    return t\n  }\n  return forceArray(arrOfNumber).reduce(sum, 0)\n}\n","const g =\n  (typeof self === 'object' && self.self === self && self) ||\n  (typeof window === 'object' && window.window === window && window) ||\n  (typeof global === 'object' && global.global === global && global)\n\nexport default g\n","import glob from './glob'\n/* eslint-disable prefer-destructuring */\nexport const defaultForbidenChars = \"'@#$%¨&*()_+{}?^:><|¹²³£¢¬§ªº°;.,~´`=-\"\n/**\n * (string) Remove the first character\n * @function rmFirstChar\n * @param {String} str\n * @returns {String} string modified\n */\nexport function rmFirstChar(str) {\n  return str.slice(1)\n}\n\n/**\n * (string) Remove the last character\n * @function rmLastChar\n * @param {String} str\n * @returns {String} string modified\n */\nexport function rmLastChar(element) {\n  return element.slice(0, element.length - 1)\n}\n\n/**\n * (string) Primeira palavra da sentenca\n * @function firstWord\n * @param {String} text\n * @returns {String}\n * @example\n * firstWord('Leandro Sbrissa') // Leandro\n */\nexport function firstWord(text) {\n  if (!text) return ''\n  const fullName = text.trim().split(' ')\n  return fullName[0]\n}\n\n/**\n * (string) Ultima palavra da sentenca\n * @function lastWord\n * @param {String} text\n * @returns {String}\n * @example\n * lastWord('Leandro Sbrissa') // Sbrissa\n */\nexport function lastWord(text) {\n  if (!text) return ''\n  const fullName = text.trim().split(' ')\n  return fullName.slice(-1).join(' ')\n}\n\n/**\n * @function replaceAll\n * @param {String} str\n * @param {String} needle\n * @param {String} replacement\n * @example\n * replaceAll('T*T', '*', '_') // return 'T_T'\n */\nexport function replaceAll(str, needle, replacement) {\n  if (!str) return ''\n  if (Array.isArray(needle)) {\n    let rtn = `${str}`\n    for (let i = 0; i < needle.length; i++) {\n      rtn = replaceAll(rtn, needle[i], replacement)\n    }\n    return rtn\n  }\n  return str.split(needle).join(replacement)\n}\n\n/**\n * @function removeAll\n * @param {String|Array<string>} str\n * @param {String|Array<string>} chars\n * @returns {String|Array<string>}\n * @example\n * removeAll('TEST#$_', '#$_') // return 'TEST'\n */\nexport function removeAll(str, chars = defaultForbidenChars, replacement = '') {\n  if (!str) return ''\n  if (Array.isArray(str)) return str.map(r => removeAll(r, chars, replacement))\n  const c = Array.isArray(chars) ? chars : chars.split('')\n  let result = str\n  for (let i = 0; i < c.length; i++) result = replaceAll(result, c[i], replacement)\n  return result\n}\n\n/**\n * Primeiras letras em maiuscula\n * @function titleize\n * @param {String} text\n * @returns {String}\n * @example\n * titleize('teste de maiuscula') // Teste de Maiuscula\n */\nexport function titleize(text) {\n  if (!text) return ''\n  const cases = ['de', 'do', 'da', 'dos', 'das', 'a', 'o', 'as', 'os', 'e', 'di']\n  const words = text.toLowerCase().trim().split(' ')\n  return words\n    .map(w => {\n      if (cases.indexOf(w) < 0) {\n        return `${w[0].toUpperCase()}${w.slice(1)}`\n      }\n      return w\n    })\n    .join(' ')\n}\n\n/**\n * Verify if String is MAC address\n * @function isMAC\n * @param {String} strMac\n * @returns {Boolean}\n */\nexport function isMAC(strMac) {\n  if (!strMac) return false\n  if (strMac.indexOf(':') >= 0 && strMac.length !== 17) return false\n  if (strMac.indexOf(':') < 0 && strMac.length !== 12) return false\n  const re = /^[a-fA-F0-9:]{17}|[a-fA-F0-9]{12}$/g\n  return re.test(strMac)\n}\n\nexport function isHexReg(str) {\n  const re = /[0-9A-Fa-f]{6}/g\n  return re.test(str)\n  // re.lastIndex = 0; // be sure to reset the index after using .text()\n}\n\n// export function isHex(h) {\n//   const a = parseInt(h, 16)\n//   return a.toString(16) === h\n// }\n\n/**\n * @function extractHostname\n * @param {String} url\n * @returns {String}\n */\nexport function extractHostname(url) {\n  let hostname\n  if (url.indexOf('//') > -1) {\n    hostname = url.split('/')[2]\n  } else {\n    hostname = url.split('/')[0]\n  }\n  hostname = hostname.split(':')[0]\n  hostname = hostname.split('?')[0]\n  return hostname\n}\n\n/**\n * @function toMask\n * @param {string} mask\n * @param {Number|String} number alphanumeric\n * @returns {String}\n * @example\n * toMask('XXX-XXXX', ABC1234) // ABC-1234\n */\nexport function toMask(mask, number) {\n  if (!number) return ''\n  const s = `${number}`\n  let r = ''\n  for (let im = 0, is = 0; im < mask.length && is < s.length; im++) {\n    r += mask.charAt(im) === 'X' ? s.charAt(is++) : mask.charAt(im)\n  }\n  return r\n}\n\n/**\n * @function isValidTime\n * @param {string} str\n * @returns {Boolean}\n */\nexport function isValidTime(str) {\n  return /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(str)\n}\n\n/**\n * @function formatBytes\n * @param {number|string} bytes numero em bytes\n * @param {number} decimals casas decimais\n * @example\n * // formatBytes(bytes,decimals)\n * formatBytes(1024);       // 1 KB\n * formatBytes('1024');     // 1 KB\n * formatBytes(1234);       // 1.21 KB\n * formatBytes(1234, 3);    // 1.205 KB\n */\nexport function formatBytes(bytes, decimals = 2) {\n  if (!bytes || bytes === 0) return '0 Bytes'\n\n  const k = 1024\n  const b = bytes < 0 ? bytes * -1 : bytes\n  const dm = decimals < 0 ? 0 : decimals\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n\n  const i = Math.floor(Math.log(b) / Math.log(k))\n\n  return `${parseFloat((b / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`\n}\n\n/**\n * @function camelize\n * @param {String} str\n * {@link https://stackoverflow.com/questions/2970525/converting-any-string-into-camel-case StackOverflow}.\n * @example\n * camelize(\"EquipmentClass name\");\n * camelize(\"Equipment className\");\n * camelize(\"equipment class name\");\n * camelize(\"Equipment Class Name\");\n * // all output \"equipmentClassName\"\n */\nexport function camelize(str) {\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase()\n    })\n    .replace(/\\s+/g, '')\n}\n\n/**\n * @function urlEncodeObject\n * @param {any} object\n * @returns {string}\n * @example\n * urlEncodeObject({foo: 'fooValue', bar: 'barValue'}) // foo=fooValue&bar=barValue\n */\nexport function urlEncodeObject(object) {\n  if (typeof object !== 'object' || object instanceof Date) return ''\n  const result = []\n  Object.keys(object).forEach(k => {\n    const value = `${object[k]}`\n    glob && glob.encodeURIComponent && result.push(`${k}=${glob.encodeURIComponent(value)}`)\n  })\n  return result.length ? result.join('&') : ''\n}\n\n/**\n * @function isEmail\n * @param {String} value e-mail string\n * @returns {boolean}\n */\nexport function isEmail(value) {\n  // eslint-disable-next-line prefer-regex-literals\n  const reg = new RegExp(/^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/)\n  return value && reg.test(value)\n}\n\n/**\n * @function validURL\n * @param {string|Array<string>} str\n * @returns {boolean|Array<boolean>}\n * @example\n * validURL('http://example.com') // true\n * validURL(['http://example1.com', 'abcde']) // [true, false]\n */\nexport function validURL(str) {\n  if (Array.isArray(str)) return str.map(s => validURL(s))\n\n  const pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i'\n  )\n\n  return !!pattern.test(str)\n}\n","import chunk from 'chunk'\n\nexport function isDefined(v) {\n  try {\n    return !!(v !== null && v !== undefined)\n  } catch (error) {\n    return false\n  }\n}\n\nexport function notNull(value, defaultValue = true) {\n  return value === undefined || value === null ? defaultValue : value\n}\n\n/**\n * Convert Int To String(Hex)\n * @param {Number} int\n * @param {Number} size integer\n * @param {Boolean} noLeftZero\n * @returns {string} hex(number)\n */\nexport function intToHex(int, size, noLeftZero) {\n  const rmL = s => s.replace(/^0+/, '')\n  try {\n    const hex = Number(int).toString(16).toLocaleUpperCase()\n    const len = hex.length % 2 !== 0 ? hex.length + 1 : hex.length\n    return noLeftZero ? rmL(hex) : hex.padStart(size || len, '0')\n  } catch (e) {\n    const rtn = '00'\n    return noLeftZero ? rmL(rtn) : rtn.padStart(size || 2, '0')\n  }\n}\n\n/**\n * Convert Int To String(Hex)\n * @param {Number} int\n * @returns {string} hex(number)\n */\nexport function intToHex2(int) {\n  try {\n    const hex = Number(int).toString(16).toLocaleUpperCase()\n    const len = hex.length % 2 !== 0 ? hex.length + 1 : hex.length\n    return hex.padStart(len, '0')\n  } catch (e) {\n    return `0${(0).toString(16)}`.slice(-2).toUpperCase()\n  }\n}\n/**\n * @function tryInteger\n * @param {any} value\n * @returns {Number|False}\n */\nexport function tryInteger(value) {\n  const numero = parseInt(value, 10)\n  if (Number.isInteger(numero) || numero <= 0) return numero\n  return false\n}\n\n/**\n * Converte Hexadecimal em Alphanumeric String\n * @function hexToAlphaNumeric\n * @param {Buffer | String | Array<String>} hexx\n * @param {Boolean} preserve se true converte invalid ALPHANUMERIC in space\n * @returns {String} hexadecimal string\n * @example\n * hexToAlphaNumeric('414243') // return 'ABC'\n * hexToAlphaNumeric('413943', true) // return 'A C'\n */\nexport function hexToAlphaNumeric(hexx, preserve) {\n  if (!hexx) return ''\n  let hex = ''\n  if (hexx instanceof Buffer) hex = hexx.toString('hex').toUpperCase()\n  if (Array.isArray(hexx)) hex = hexx.join('').toUpperCase()\n  hex = chunk(hex, 2)\n  let result = ''\n  for (let i = 0; i < hex.length; i++) {\n    const h = hex[i]\n    const num = hexToInt(h)\n    if (preserve) {\n      result += num >= 40 && num <= 126 ? String.fromCharCode(num) : ' '\n    } else if (num >= 40 && num <= 126) result += String.fromCharCode(num)\n  }\n  return result\n}\n\nexport function hex2a(hexx) {\n  const hex = hexx.toString() // force conversion\n  let str = ''\n  for (let i = 0; i < hex.length && hex.substr(i, 2) !== '00'; i += 2) {\n    str += String.fromCharCode(parseInt(hex.substr(i, 2), 16))\n  }\n  return str\n}\n\n/**\n * Convert HEX To String UTF-8\n * @param {Buffer} hex\n * @returns {string} ASCII(hex)\n */\nexport function hexToASC(hex) {\n  try {\n    if (hex instanceof Buffer) {\n      return hex.toString('utf8')\n    }\n    if (Array.isArray(hex)) return Buffer.from(hex.join(''), 'hex').toString('utf8')\n    return Buffer.from(hex, 'hex').toString('utf8')\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Convert ASCII To String(Hex)\n * @param {String} str\n * @returns {string} hex(number)\n */\nexport function ASCToHex(str) {\n  const arr1 = []\n  for (let n = 0, l = str.length; n < l; n++) {\n    const hex = Number(str.charCodeAt(n)).toString(16)\n    arr1.push(hex)\n  }\n  return arr1.join('')\n}\n\n/**\n * @function hexToInt\n * @param {String | Array} strhex\n * @returns {Number} decimal ASCII\n * @example\n * hexToInt('41'); // return 'A'\n * hexToInt(['41','42','43']); // return ['A','B','C']\n */\nexport function hexToInt(strhex) {\n  if (Array.isArray(strhex)) return strhex.map(item => hexToInt(item))\n  try {\n    const result = parseInt(strhex, 16)\n    return result\n  } catch (error) {\n    return 0\n  }\n}\n","// import _ from 'lodash'\nimport { forceArray } from './arrayts'\n\n/**\n * Simple object check.\n * @param item\n * @returns {boolean}\n */\nexport function isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item) && !(item instanceof Date)\n}\n\n// /**\n//  * Check if there is ownership in an object\n//  * @function objectHasKeys\n//  * @param {Object} obj\n//  * @param {Array<String>} keys\n//  * @returns {boolean}\n//  * @example\n//  * objectHasKeys({ a: 1, b: 2}, ['b','c']) // true match 'b'\n//  * objectHasKeys({ a: 1, b: 2}, ['c']) // false\n//  */\n// export function objectHasKeys(obj, keys) {\n//   const keysO = Object.keys(obj)\n//   const k = forceArray(keys)\n//   for (let i = 0; i < keysO.length; i++) {\n//     if (k.includes(keysO[i])) {\n//       return true\n//     }\n//   }\n//   return false\n// }\n\n/**\n * Get object by omitting properties\n * @function objectWithoutProperties\n * @param {Object} obj\n * @param {Array<string>} keys\n * @returns {Object}\n * @example\n * objectWithoutProperties({ a: 1, b: 2, c: 3 }, ['b'])\n * // return { a: 1, c: 3 }\n */\nexport function objectWithoutProperties(obj, keys) {\n  const target = {}\n  const keysO = Object.keys(obj)\n  for (let i = 0; i < keysO.length; i++) {\n    const k = keysO[i]\n    if (!keys.includes(k)) target[k] = obj[k]\n  }\n  return target\n}\n\n/**\n * Compares object and returns only existing keys\n * @function onlyWithProperties\n * @param {object|Array<object>} obj\n * @param {Array<string>|Object|string} keys\n * @returns {object|Array<object>}\n * @example\n * onlyWithProperties({ a: 1, b: 2, c: 3 }, ['b']) // produce { b: 2 }\n * onlyWithProperties({ a: 1, b: 2, c: 3 }, { b: 1 }) // produce { b: 2 }\n * onlyWithProperties({ a: 1, b: 2, c: 3 }, 'b') // produce { b: 2 }\n */\nexport function onlyWithProperties(obj, keys = []) {\n  if (Array.isArray(obj)) return obj.map(o => onlyWithProperties(o, keys))\n  if (typeof obj !== 'object') return {}\n\n  const target = {}\n  const keysCompare = []\n\n  if (Array.isArray(keys)) keys.forEach(k => keysCompare.push(k))\n  else if (typeof keys === 'object') Object.keys(keys).forEach(k => keysCompare.push(k))\n  else forceArray(keys).forEach(k => keysCompare.push(k))\n\n  Object.keys(obj).forEach(k => {\n    if (keysCompare.includes(k)) target[k] = obj[k]\n  })\n\n  return target\n}\n\n/**\n * @typedef {Object} replaceObjectOptions\n * @property {Boolean} clone clone this\n * @property {Boolean} inc incremental keys\n */\n\n/**\n * Replace object values\n * @function replaceObject\n * @param {Object} dest\n * @param {Object} src\n * @param {replaceObjectOptions} options\n * @returns {Object} object affected\n */\n// export function replaceObject(dest, src, options) {\n//   if (!dest || !src) return false\n//   const funcCopy = value => (options && options.clone ? _.cloneDeep(value) : value)\n\n//   Object.keys(src).forEach(key => {\n//     if ((options && options.inc) || key in dest) {\n//       // eslint-disable-next-line no-param-reassign\n//       dest[key] = funcCopy(src[key])\n//     }\n//   })\n\n//   return dest\n// }\n\n/**\n * Sorts array of objects\n * credits: https://www.sitepoint.com/sort-an-array-of-objects-in-javascript/\n * @function compareValues\n * @param {String} key\n * @param {String} order\n * @example\n * myArray.sort(compareValues('name', 'desc'));\n */\nexport function compareValues(key, order = 'asc') {\n  return function innerSort(a, b) {\n    if (!(key in a) || !(key in b)) return 0\n    const varA = typeof a[key] === 'string' ? a[key].toUpperCase() : a[key]\n    const varB = typeof b[key] === 'string' ? b[key].toUpperCase() : b[key]\n\n    let comparison = 0\n    if (varA > varB) {\n      comparison = 1\n    } else if (varA < varB) {\n      comparison = -1\n    }\n    return order === 'desc' ? comparison * -1 : comparison\n  }\n}\n\n/**\n * Deep merge objects.\n * @param target\n * @param sources\n */\nexport function mergeDeep(target, ...sources) {\n  if (!sources.length) return target\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    const keys = Object.keys(source)\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} })\n        mergeDeep(target[key], source[key])\n      } else {\n        Object.assign(target, { [key]: source[key] })\n      }\n    }\n  }\n  return mergeDeep(target, ...sources)\n}\n","import crypto from 'crypto'\nimport getRandomValues from 'get-random-values'\nimport { v4 as uuid } from 'uuid'\nimport md5 from 'md5'\nimport chunk from 'chunk'\n\n/**\n * Returns a random number between min (inclusive) and max (exclusive)\n * @function getRandomArbitrary\n * @returns {number}\n */\nexport function getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * @function getRandomInt\n * @param {number} min integer\n * @param {number} max integer\n * @returns {number}\n */\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n/**\n * Gerar caracteres aleatorios\n * @function getRamdomStr\n * @param {Number} len tamanho\n * @param {String} wishlist lista de caracteres para utilizar\n * @example\n * getRamdomStr(4,'0123ABCDEF')\n */\nexport function getRamdomStr(len, whitelist = '123456789ABCEFGHKMPQRSTXYZ') {\n  return Array(len)\n    .fill('')\n    .map(() => {\n      // eslint-disable-next-line no-mixed-operators\n      const q = Math.floor((getRandomValues(new Uint8Array(1))[0] / (0xff + 1)) * whitelist.length)\n      return whitelist[q]\n    })\n    .join('')\n}\n\nexport function getInRamdom(object) {\n  if (Array.isArray(object)) {\n    return object[getRandomInt(0, object.length - 1)]\n  }\n\n  if (typeof object === 'object') {\n    const arrKeys = Object.keys(object)\n    const key = arrKeys[getRandomInt(0, arrKeys.length - 1)]\n    if (key in object) return object[key]\n  }\n\n  if (typeof object === 'function') return getInRamdom(object())\n\n  const arrstr = (object || '123456789ABCEFGHKMPQRSTXYZ').toString().split('')\n  return arrstr[getRandomInt(0, arrstr.length - 1)]\n}\n\n/**\n * @function getRamdomHex\n * @param {Number} size - integer (default 16)\n * @returns {String} - HEX\n * @example\n * hexRamdom() // c05662d445cd3988402521922ba16e29\n */\nexport function getRamdomHex(size = 16) {\n  const result = crypto.randomBytes(size)\n  return result.toString('hex')\n}\n\nexport function generateIdPass(payload, secret = '') {\n  const uid = uuid()\n  const p = JSON.stringify(payload)\n  return md5(`${uid}${p}${secret}${getRamdomHex()}`)\n}\n\n/**\n * @function hashPassword\n * @param {String} payload\n * @param {String} secret\n * @returns {String} HASH MD5\n */\nexport function hashPassword(payload, secret = '') {\n  return md5(`${payload}${secret}`)\n}\n\n/**\n * @function hashMD5\n * @param {String} str\n * @param {Boolean} toBuffer\n */\nexport function hashMD5(str, toBuffer) {\n  const hash = md5(`${str}`)\n  return toBuffer ? Buffer.from(chunk(hash, 2)) : hash\n}\n\n/**\n * @function isMD5\n * @param {String} inputString\n */\nexport function isMD5(inputString) {\n  // if (typeof inputString !== 'string') return false;\n  return /[a-fA-F0-9]{32}/.test(inputString)\n}\n","import moment from 'moment-timezone'\n\n/**\n * @function timeRest\n * @param {Number} inMinutes integer\n */\nexport function timeRest(inMinutes) {\n  const minutes = inMinutes < 0 ? inMinutes * -1 : inMinutes\n  const minutos = 1\n  const horas = 60 // minuto * 60\n  const dias = 1440 // hora * 24\n  const semanas = 10080 // dias * 7\n  const meses = 302400 // semanas * 4\n  const anos = 3628800 // meses * 12\n\n  // let valorInicio = parseInt(minutes, 10) || 0;\n  let valorInicio = minutes\n  let result = ''\n\n  if (valorInicio > anos) {\n    const ano = Math.floor(valorInicio / anos)\n    result += `${ano}y `\n    valorInicio -= anos * ano\n  }\n\n  if (valorInicio > meses) {\n    const mes = Math.floor(valorInicio / meses)\n    result += `${mes}mo `\n    valorInicio -= meses * mes\n  }\n\n  if (valorInicio > semanas) {\n    const semana = Math.floor(valorInicio / semanas)\n    result += `${semana}se `\n    valorInicio -= semanas * semana\n  }\n\n  if (valorInicio > dias) {\n    const dia = Math.floor(valorInicio / dias)\n    result += `${dia}d `\n    valorInicio -= dias * dia\n  }\n\n  if (valorInicio > horas) {\n    const hora = Math.floor(valorInicio / horas)\n    result += `${hora}h `\n    valorInicio -= horas * hora\n  }\n\n  if (valorInicio > minutos) {\n    const minuto = Math.floor(valorInicio / minutos)\n    result += `${minuto}m`\n  } else if (valorInicio > 0) {\n    const mm = valorInicio * 60\n    result += `${Math.floor(mm)}seg`\n  }\n\n  // const minuto = valorInicio;\n  // result += `${minuto}m `;\n\n  return result\n}\n\nexport function getUpTime(init) {\n  const ms = moment().diff(moment(init, 'YYYY-MM-DD HH:mm:ss'))\n  return timeRest(moment.duration(ms).asMinutes()) || 0\n}\n\n/**\n * @function diffExpires\n * @param {number} expires\n * @param {number} dateNow\n * @returns {number} minutes\n */\nexport function diffExpires(expires, dateNow = Date.now()) {\n  const ms = moment(expires).diff(moment(dateNow))\n  return moment.duration(ms).asMinutes()\n}\n\n/**\n * @function dateToStrTimeZone\n * @param {String|Date} date\n * @param {String} to date format\n * @param {String} timezone\n * @returns {String} data formated (to)\n * @example\n * dateToStrTimeZone(new Date(), 'YYYY-MM-DD HH:mm:ss', 'America/Fortaleza');\n */\nexport function dateToStrTimeZone(\n  date,\n  to = 'YYYY-MM-DD HH:mm:ss',\n  timezone = 'America/Fortaleza'\n) {\n  if (!timezone) return moment(date).format(to)\n  return moment(date).tz(timezone).format(to)\n}\n\n/**\n *\n * @param {String} strdate\n * @param {String} from date format\n * @param {String} to date format\n * @returns {String} data formated (to)\n * @example\n * strDateFromTo('01/12/19', 'DD/MM/YY', 'YYY-MM-DD')\n */\nexport function strDateFromTo(strdate, from, to = 'YYYY-MM-DD HH:mm:ss') {\n  if (!strdate) return moment().format(to)\n  if (strdate instanceof Date) return moment(strdate).format(to)\n  if (moment.isMoment(strdate)) return strdate.format(to)\n\n  return moment(strdate, from).format(to)\n}\n\n/**\n *\n * @param {*} date\n * @param {*} format\n */\nexport function rangedMonth(date, format) {\n  const r = {\n    start: moment(date).startOf('month'),\n    end: moment(date).endOf('month')\n  }\n\n  if (typeof format === 'boolean') {\n    if (format) return { start: r.start, end: r.end }\n    return { start: r.toDate(), end: r.toDate() }\n  }\n\n  const defFormat = format || 'YYYY-MM-DD HH:mm:ss'\n  return {\n    start: moment(date).startOf('month').format(defFormat),\n    end: moment(date).endOf('month').format(defFormat)\n  }\n}\n\n/**\n * @function extractOfDateTime\n * @param {Date|String} datetime - string YYYY-MM-DD HH:mm:ss\n * @param {String} format date format ex: 'YYYY-MM-DD HH:mm:ss'\n * @param {String} timezone\n */\nexport function extractOfDateTime(datetime, format, timezone) {\n  const all = dateToStrTimeZone(datetime, format, timezone)\n  const spliter = all.split(' ')\n  const time = spliter.length > 1 ? spliter[1] : '00:00:00'\n  const date = spliter.length > 0 ? spliter[0] : 'Invalid date'\n  return {\n    date,\n    time\n  }\n}\n","/**\n * @function fileHash\n * @param {string} filename\n * @param {'sha1'|'md5'|'sha256'|'sha512'} algorithm\n * @returns {Promise<String>|false}\n */\nexport function fileHash(filename, algorithm = 'md5') {\n  // eslint-disable-next-line consistent-return\n  return new Promise(resolve => {\n    try {\n      const { createHash } = require('crypto')\n      const fs = require('fs')\n      const shasum = createHash(algorithm)\n      const s = fs.ReadStream(filename)\n      s.on('data', data => shasum.update(data))\n      // making digest\n      s.on('end', () => {\n        const hash = shasum.digest('hex')\n        return resolve(hash)\n      })\n    } catch {\n      return false\n    }\n  })\n}\n\n/**\n * using path.parse\n * @function fileParse\n * @param {String} filePath\n * @returns {import('path').ParsedPath}\n */\nexport function fileParse(filePath) {\n  const { parse } = require('path')\n  return parse(filePath) || false\n}\n\n/**\n * using path.parse\n * @function pathJoin\n * @param {Array<string>} paths\n * @returns {String}\n */\nexport function pathJoin(...paths) {\n  const { join } = require('path')\n  return join(...paths)\n}\n\n/**\n * using path.extname\n * @function extName\n * @param {String} filePath\n * @returns {String} extension ex: '.png'\n */\nexport function extName(filePath) {\n  const { extname } = require('path')\n  return extname(filePath) || ''\n}\n\n/**\n * @function fileExists\n * @param {string} filePath\n */\nexport function fileExists(filePath) {\n  try {\n    const fs = require('fs')\n    return !!fs.existsSync(filePath)\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * @function deleteFile\n * @param {string} filePath\n * @returns {Promise<Boolean>}\n */\nexport async function deleteFile(filePath) {\n  try {\n    const fs = require('fs')\n    if (fileExists(filePath)) {\n      await fs.unlinkSync(filePath)\n    }\n    return true\n  } catch (_error) {\n    // logError(__filename, 'deleteFile', err)\n    return false\n  }\n}\n\n/**\n * @function renameFile\n * @param {String} oldPath\n * @param {String} newPath\n * @param {Boolean} force\n * @returns {Boolean}\n */\nexport function renameFile(oldPath, newPath, force) {\n  try {\n    const fs = require('fs')\n    if (force && fileExists(newPath)) {\n      fs.unlinkSync(newPath)\n    }\n    fs.renameSync(oldPath, newPath)\n    return true\n  } catch (_error) {\n    return false\n  }\n}\n\n/**\n * @function copyFile\n * @param {string} source\n * @param {string} target\n * @returns {Promise<boolean>}\n */\nexport async function copyFile(source, target) {\n  let result = false\n  try {\n    const { copyFile } = require('fs/promises')\n    await copyFile(source, target)\n    result = true\n  } catch {\n    result = false\n  }\n  return result\n}\n","/**\n * Arredonda numero com casas decimais\n * @function round\n * @param {Number} number\n * @param {Number} precision\n * @example\n * round(1234.5678, 1); // 1234.6\n */\nexport function round(number, precision = 4) {\n  if (!number || (number && number === 0)) return 0\n  const factor = Math.pow(10, precision)\n  const tempNumber = number * factor\n  const roundedTempNumber = Math.round(tempNumber)\n  return roundedTempNumber / factor\n}\n\n/**\n * Arredonda numero com casas decimais\n * @function round2\n * @param {Number} number\n * @param {Number} precision\n * @example\n * round2(1234.5678, 1); // 1234.6\n */\nexport function round2(number, precision = 4) {\n  if (!number || (number && number === 0)) return 0\n  if (typeof number === 'string') return parseFloat(number).toFixed(precision)\n  if (typeof number === 'number') return number.toFixed(precision)\n  return 0\n}\n\nexport function round3(number, precision = 4) {\n  return +`${Math.round(`${number}e+${precision}`)}e-${precision}`\n}\n","// import sharp from 'sharp'\nimport base64Img from 'base64-img'\n\n// /**\n//  * @function convertSvgToPng\n//  * @param {String} source\n//  * @param {String} dest\n//  */\n// export async function convertSvgToPng(source, dest) {\n//   try {\n//     const converted = await sharp(source).png().toFile(dest)\n//     return converted\n//   } catch (_error) {\n//     return false\n//   }\n// }\n\n/**\n * @function toBase64Img\n * @param {String} filePath\n */\nexport function toBase64Img(filePath) {\n  return base64Img.base64Sync(filePath)\n}\n"],"names":["range","begin","end","interval","i","g","self","window","global","replaceAll","str","needle","replacement","Array","isArray","rtn","length","split","join","isDefined","v","error","hexToInt","strhex","map","item","parseInt","isObject","Date","getRandomInt","min","max","Math","ceil","floor","random","getRamdomHex","size","crypto","randomBytes","toString","timeRest","inMinutes","dias","semanas","meses","anos","valorInicio","result","ano","mes","semana","dia","hora","mm","dateToStrTimeZone","date","to","timezone","moment","tz","format","fileExists","filePath","require","existsSync","err","arr1","n","l","hex","Number","charCodeAt","push","arr","withZero","array","a","filter","f","reduce","b","buf","Buffer","chunk","replace","word","index","toLowerCase","toUpperCase","key","order","varA","varB","comparison","async","source","target","copyFile","fs","unlinkSync","_error","expires","dateNow","now","ms","diff","duration","asMinutes","extname","url","hostname","indexOf","datetime","spliter","time","filename","algorithm","Promise","resolve","createHash","shasum","s","ReadStream","on","data","update","hash","digest","parse","text","trim","bytes","decimals","dm","log","parseFloat","pow","toFixed","payload","secret","uid","uuid","p","JSON","stringify","md5","getInRamdom","object","arrKeys","Object","keys","arrstr","len","whitelist","fill","q","getRandomValues","Uint8Array","init","toBuffer","from","hexx","substr","String","fromCharCode","preserve","num","int","noLeftZero","rmL","toLocaleUpperCase","padStart","e","slice","value","reg","RegExp","test","strMac","inputString","sort","lowMid","highMid","mergeDeep","sources","shift","assign","defaultValue","obj","keysO","k","includes","onlyWithProperties","o","keysCompare","forEach","forceArray","paths","fim","r","start","startOf","endOf","toDate","defFormat","removeAll","chars","c","oldPath","newPath","force","renameSync","element","number","precision","factor","tempNumber","round","strdate","isMoment","arrOfNumber","checkNumber","t","cases","w","base64Img","base64Sync","mask","im","is","charAt","numero","isInteger","glob","encodeURIComponent","validURL"],"mappings":"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"}