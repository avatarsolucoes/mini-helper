{"version":3,"file":"index.js","sources":["../src/array.js","../src/string.js","../src/ramdom.js","../src/file.js","../src/date.js","../src/variables.js","../src/object.js","../src/image.js","../src/number.js"],"sourcesContent":["import chunk from 'chunk'\n\n/**\n * Force any values an array\n * @function forceArray\n * @param {any} value\n * @return {Array}\n * @example\n * forceArray('1') // return ['1']\n */\nexport function forceArray(value = []) {\n  return !Array.isArray(value) ? [value] : value\n}\n\n/**\n * If array return first item\n * @function unArray\n * @param {Array} arr\n */\nexport function unArray(arr) {\n  if (!Array.isArray(arr)) return arr\n  if (arr.length > 0) return arr[0]\n  return false\n}\n\n/**\n * @function range\n * @param {Number} begin\n * @param {Number} end\n * @param {Number} interval\n */\nexport function* range(begin, end, interval = 1) {\n  for (let i = begin; i <= end; i += interval) {\n    yield i\n  }\n}\n\n/**\n * @function rangeArray\n * @param {Number} init\n * @param {Number} fim\n * @param {Number} interval\n * @returns {Array<number>}\n * @example\n * rangeArray(1, 5, 1) // [1,2,3,4,5]\n */\nexport function rangeArray(init, fim, interval = 1) {\n  return Array.from(range(init, fim, interval))\n}\n\n/**\n * Convert Buffer in Array\n * @param {Buffer|ArrayBuffer|string} buf dataBuffer\n * @returns {Array} chunked\n * @example\n * buffToArray('A03B18') // return ['A0','3B','18']\n */\nexport function buffToArray(buf, size = 2) {\n  if (!buf) return []\n  if (buf instanceof Buffer) {\n    return chunk(buf.toString('hex'), size)\n  }\n  if (Array.isArray(buf)) return buf\n  return chunk(buf.replace(/ /g, ''), size)\n}\n\n/**\n * @function medianInArray\n * @param {Array<Number>} arr array of Numbers\n * @param {Boolean} withZero\n * @returns {Number}\n */\nexport function medianInArray(arr, withZero) {\n  if (!Array.isArray(arr)) return 0\n  const array = withZero ? arr.map(a => a || 0) : arr.filter(a => !!(a && a > 0))\n  array.sort((a, b) => a - b)\n  const lowMid = Math.floor((array.length - 1) / 2)\n  const highMid = Math.ceil((array.length - 1) / 2)\n  return (array[lowMid] + array[highMid]) / 2\n}\n\n/**\n * @function averageInArray\n * @param {Array<Number>} arr array of Numbers\n * @param {Boolean} withZero\n * @returns {Number}\n */\nexport function averageInArray(arr, withZero) {\n  if (!Array.isArray(arr)) return 0\n  const array = withZero ? arr.map(a => a || 0) : arr.filter(f => f)\n  return array.reduce((a, b) => a + b, 0) / array.length\n}\n\n/**\n * @function sumArray\n * @param {Array<Number>} arrOfNumber\n * @param {boolean} checkNumber\n * @returns {Number} sum\n * @example\n * var arr = [4, 2, 8, 6];\n * sumArray(arr) // return 20\n * sumArray(['1','teste', 2], true) // return 3\n */\nexport function sumArray(arrOfNumber, checkNumber) {\n  const sum = (t, n) => {\n    if (checkNumber) return t + typeof n === 'number' ? n : parseInt(n, 10) || 0\n    return t + n\n  }\n  return forceArray(arrOfNumber).reduce(sum)\n}\n\nexport function includesInArrayObject(arrObject, key, value) {\n  return arrObject.some(el => !!(key in el && el[key] === value))\n}\n","/* eslint-disable prefer-destructuring */\nexport const defaultForbidenChars = \"'@#$%¨&*()_+{}?^:><|¹²³£¢¬§ªº°;.,~´`=-\"\n\n/**\n * Remove the first character\n * @function rmFirstChar\n * @param {String} str\n * @returns {String} string modified\n */\nexport function rmFirstChar(str) {\n  return str.slice(1)\n}\n\nexport function rmLastChar(element) {\n  return element.slice(0, element.length - 1)\n}\n\n/**\n * Primeira palavra da sentenca\n * @function firstWord\n * @param {String} text\n * @returns {String}\n * @example\n * firstWord('Leandro Sbrissa') // Leandro\n */\nexport function firstWord(text) {\n  if (!text) return ''\n  const fullName = text.trim().split(' ')\n  return fullName[0]\n}\n\n/**\n * Ultima palavra da sentenca\n * @function lastWord\n * @param {String} text\n * @returns {String}\n * @example\n * lastWord('Leandro Sbrissa') // Sbrissa\n */\nexport function lastWord(text) {\n  if (!text) return ''\n  const fullName = text.trim().split(' ')\n  return fullName.slice(-1).join(' ') || ''\n}\n\n/**\n * @function replaceAll\n * @param {String} str\n * @param {String} needle\n * @param {String} replacement\n * @example\n * replaceAll('T*T', '*', '_') // return 'T_T'\n */\nexport function replaceAll(str, needle, replacement) {\n  if (!str) return ''\n  if (Array.isArray(needle)) {\n    let rtn = `${str}`\n    for (let i = 0; i < needle.length; i++) {\n      rtn = replaceAll(rtn, needle[i], replacement)\n    }\n    return rtn\n  }\n  return str.split(needle).join(replacement)\n}\n\n/**\n * @function removeAll\n * @param {String|Array<string>} str\n * @param {String|Array<string>} chars\n * @returns {String|Array<string>}\n * @example\n * removeAll('TEST#$_', '#$_') // return 'TEST'\n */\nexport function removeAll(str, chars = defaultForbidenChars, replacement = '') {\n  if (!str) return ''\n  if (Array.isArray(str)) return str.map(r => removeAll(r, chars, replacement))\n  const c = Array.isArray(chars) ? chars : chars.split('')\n  let result = str\n  for (let i = 0; i < c.length; i++) result = replaceAll(result, c[i], replacement)\n  return result\n}\n\n/**\n * Primeiras letras em maiuscula\n * @function titleize\n * @param {String} text\n * @returns {String}\n * @example\n * titleize('teste de maiuscula') // Teste de Maiuscula\n */\nexport function titleize(text) {\n  if (!text) return ''\n  const cases = ['de', 'do', 'da', 'dos', 'das', 'a', 'o', 'as', 'os', 'e', 'di']\n  const words = text.toLowerCase().trim().split(' ')\n  return words\n    .map(w => {\n      if (cases.indexOf(w) < 0) {\n        return `${w[0].toUpperCase()}${w.slice(1)}`\n      }\n      return w\n    })\n    .join(' ')\n}\n\n/**\n * Verify if String is MAC address\n * @function isMAC\n * @param {String} strMac\n * @returns {Boolean}\n */\nexport function isMAC(strMac) {\n  if (!strMac) return false\n  if (strMac.indexOf(':') >= 0 && strMac.length !== 17) return false\n  if (strMac.indexOf(':') < 0 && strMac.length !== 12) return false\n  const re = /^[a-fA-F0-9:]{17}|[a-fA-F0-9]{12}$/g\n  return re.test(strMac)\n}\n\nexport function isHexReg(str) {\n  const re = /[0-9A-Fa-f]{6}/g\n  return re.test(str)\n  // re.lastIndex = 0; // be sure to reset the index after using .text()\n}\n\n// export function isHex(h) {\n//   const a = parseInt(h, 16)\n//   return a.toString(16) === h\n// }\n\n/**\n * @function extractHostname\n * @param {String} url\n * @returns {String}\n */\nexport function extractHostname(url) {\n  let hostname\n  if (url.indexOf('//') > -1) {\n    hostname = url.split('/')[2]\n  } else {\n    hostname = url.split('/')[0]\n  }\n  hostname = hostname.split(':')[0]\n  hostname = hostname.split('?')[0]\n  return hostname\n}\n\n/**\n * @function toMask\n * @param {string} mask\n * @param {Number|String} number alphanumeric\n * @returns {String}\n * @example\n * toMask('XXX-XXXX', ABC1234) // ABC-1234\n */\nexport function toMask(mask, number) {\n  if (!number) return ''\n  const s = `${number}`\n  let r = ''\n  for (let im = 0, is = 0; im < mask.length && is < s.length; im++) {\n    r += mask.charAt(im) === 'X' ? s.charAt(is++) : mask.charAt(im)\n  }\n  return r\n}\n\n/**\n * @function isValidTime\n * @param {string} str\n * @returns {Boolean}\n */\nexport function isValidTime(str) {\n  return /^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$/.test(str)\n}\n\n/**\n * @function formatBytes\n * @param {Number} bytes numero em bytes\n * @param {Number} decimals casas decimais\n * @example\n * // formatBytes(bytes,decimals)\n * formatBytes(1024);       // 1 KB\n * formatBytes('1024');     // 1 KB\n * formatBytes(1234);       // 1.21 KB\n * formatBytes(1234, 3);    // 1.205 KB\n */\nexport function formatBytes(bytes, decimals = 2) {\n  if (bytes === 0) return '0 Bytes'\n\n  const k = 1024\n  const dm = decimals < 0 ? 0 : decimals\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`\n}\n\n/**\n * @function camelize\n * @param {String} str\n * {@link https://stackoverflow.com/questions/2970525/converting-any-string-into-camel-case StackOverflow}.\n * @example\n * camelize(\"EquipmentClass name\");\n * camelize(\"Equipment className\");\n * camelize(\"equipment class name\");\n * camelize(\"Equipment Class Name\");\n * // all output \"equipmentClassName\"\n */\nexport function camelize(str) {\n  return str\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase()\n    })\n    .replace(/\\s+/g, '')\n}\n","import crypto from 'crypto'\nimport getRandomValues from 'get-random-values'\nimport { v4 as uuid } from 'uuid'\nimport md5 from 'md5'\nimport chunk from 'chunk'\n\n/**\n * Returns a random number between min (inclusive) and max (exclusive)\n * @function getRandomArbitrary\n * @returns {number}\n */\nexport function getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * @function getRandomInt\n * @param {number} min integer\n * @param {number} max integer\n * @returns {number}\n */\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n/**\n * Gerar caracteres aleatorios\n * @function getRamdomStr\n * @param {Number} len tamanho\n * @param {String} wishlist lista de caracteres para utilizar\n * @example\n * getRamdomStr(4,'0123ABCDEF')\n */\nexport function getRamdomStr(len, whitelist = '123456789ABCEFGHKMPQRSTXYZ') {\n  return Array(len)\n    .fill('')\n    .map(() => {\n      // eslint-disable-next-line no-mixed-operators\n      const q = Math.floor((getRandomValues(new Uint8Array(1))[0] / (0xff + 1)) * whitelist.length)\n      return whitelist[q]\n    })\n    .join('')\n}\n\nexport function getInRamdom(object) {\n  if (Array.isArray(object)) {\n    return object[getRandomInt(0, object.length - 1)]\n  }\n\n  if (typeof object === 'object') {\n    const arrKeys = Object.keys(object)\n    const key = arrKeys[getRandomInt(0, arrKeys.length - 1)]\n    if (key in object) return object[key]\n  }\n\n  if (typeof object === 'function') return getInRamdom(object())\n\n  const arrstr = (object || '123456789ABCEFGHKMPQRSTXYZ').toString().split('')\n  return arrstr[getRandomInt(0, arrstr.length - 1)]\n}\n\n/**\n * @function getRamdomHex\n * @param {Number} size - integer (default 16)\n * @returns {String} - HEX\n * @example\n * hexRamdom() // c05662d445cd3988402521922ba16e29\n */\nexport function getRamdomHex(size = 16) {\n  const result = crypto.randomBytes(size)\n  return result.toString('hex')\n}\n\nexport function generateIdPass(payload, secret = '') {\n  const uid = uuid()\n  const p = JSON.stringify(payload)\n  return md5(`${uid}${p}${secret}${getRamdomHex()}`)\n}\n\n/**\n * @function hashPassword\n * @param {String} payload\n * @param {String} secret\n * @returns {String} HASH MD5\n */\nexport function hashPassword(payload, secret = '') {\n  return md5(`${payload}${secret}`)\n}\n\n/**\n * @function hashMD5\n * @param {String} str\n * @param {Boolean} toBuffer\n */\nexport function hashMD5(str, toBuffer) {\n  const hash = md5(`${str}`)\n  return toBuffer ? Buffer.from(chunk(hash, 2)) : hash\n}\n\n/**\n * @function isMD5\n * @param {String} inputString\n */\nexport function isMD5(inputString) {\n  // if (typeof inputString !== 'string') return false;\n  return /[a-fA-F0-9]{32}/.test(inputString)\n}\n","import fs from 'fs'\nimport path from 'path'\nimport crypto from 'crypto'\n\n/**\n * @function fileHash\n * @param {string} filename\n * @param {'sha1'|'md5'|'sha256'|'sha512'} algorithm\n * @returns {Promise<String>|false}\n */\nexport function fileHash(filename, algorithm = 'md5') {\n  // eslint-disable-next-line consistent-return\n  return new Promise((resolve, reject) => {\n    try {\n      const shasum = crypto.createHash(algorithm)\n      const s = fs.ReadStream(filename)\n      s.on('data', data => {\n        shasum.update(data)\n      })\n      // making digest\n      s.on('end', () => {\n        const hash = shasum.digest('hex')\n        return resolve(hash)\n      })\n    } catch (error) {\n      return reject(error)\n    }\n  })\n}\n\n/**\n * using path.parse\n * @function fileParse\n * @param {String} filePath\n * @returns {import('path').ParsedPath}\n */\nexport function fileParse(filePath) {\n  return path.parse(filePath) || false\n}\n\n/**\n * using path.parse\n * @function pathJoin\n * @param {Array<string>} paths\n * @returns {String}\n */\nexport function pathJoin(...paths) {\n  return path.join(...paths)\n}\n\n/**\n * using path.extname\n * @function extName\n * @param {String} filePath\n * @returns {String} extension ex: '.png'\n */\nexport function extName(filePath) {\n  return path.extname(filePath) || ''\n}\n\n/**\n * @function fileExists\n * @param {string} filePath\n */\nexport function fileExists(filePath) {\n  try {\n    return !!fs.existsSync(filePath)\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * @function deleteFile\n * @param {string} filePath\n * @returns {Promise<Boolean>}\n */\nexport async function deleteFile(filePath) {\n  try {\n    if (fileExists(filePath)) {\n      await fs.unlinkSync(filePath)\n    }\n    return true\n  } catch (_error) {\n    // logError(__filename, 'deleteFile', err)\n    return false\n  }\n}\n\n/**\n * @function renameFile\n * @param {String} oldPath\n * @param {String} newPath\n * @param {Boolean} force\n * @returns {Boolean}\n */\nexport function renameFile(oldPath, newPath, force) {\n  try {\n    if (force && fileExists(newPath)) {\n      fs.unlinkSync(newPath)\n    }\n    fs.renameSync(oldPath, newPath)\n    return true\n  } catch (_error) {\n    return false\n  }\n}\n","import moment from 'moment-timezone'\n\n/**\n * @function timeRest\n * @param {Number} inMinutes integer\n */\nexport function timeRest(inMinutes) {\n  const minutes = inMinutes < 0 ? inMinutes * -1 : inMinutes\n  const minutos = 1\n  const horas = 60 // minuto * 60\n  const dias = 1440 // hora * 24\n  const semanas = 10080 // dias * 7\n  const meses = 302400 // semanas * 4\n  const anos = 3628800 // meses * 12\n\n  // let valorInicio = parseInt(minutes, 10) || 0;\n  let valorInicio = minutes\n  let result = ''\n\n  if (valorInicio > anos) {\n    const ano = Math.floor(valorInicio / anos)\n    result += `${ano}y `\n    valorInicio -= anos * ano\n  }\n\n  if (valorInicio > meses) {\n    const mes = Math.floor(valorInicio / meses)\n    result += `${mes}mo `\n    valorInicio -= meses * mes\n  }\n\n  if (valorInicio > semanas) {\n    const semana = Math.floor(valorInicio / semanas)\n    result += `${semana}se `\n    valorInicio -= semanas * semana\n  }\n\n  if (valorInicio > dias) {\n    const dia = Math.floor(valorInicio / dias)\n    result += `${dia}d `\n    valorInicio -= dias * dia\n  }\n\n  if (valorInicio > horas) {\n    const hora = Math.floor(valorInicio / horas)\n    result += `${hora}h `\n    valorInicio -= horas * hora\n  }\n\n  if (valorInicio > minutos) {\n    const minuto = Math.floor(valorInicio / minutos)\n    result += `${minuto}m`\n  } else if (valorInicio > 0) {\n    const mm = valorInicio * 60\n    result += `${Math.floor(mm)}seg`\n  }\n\n  // const minuto = valorInicio;\n  // result += `${minuto}m `;\n\n  return result\n}\n\nexport function getUpTime(init) {\n  const ms = moment().diff(moment(init, 'YYYY-MM-DD HH:mm:ss'))\n  return timeRest(moment.duration(ms).asMinutes()) || 0\n}\n\n/**\n * @function diffExpires\n * @param {number} expires\n * @param {number} dateNow\n * @returns {number} minutes\n */\nexport function diffExpires(expires, dateNow = Date.now()) {\n  const ms = moment(expires).diff(moment(dateNow))\n  return moment.duration(ms).asMinutes()\n}\n\n/**\n * @function dateToStrTimeZone\n * @param {String|Date} date\n * @param {String} to date format\n * @param {String} timezone\n * @returns {String} data formated (to)\n * @example\n * dateToStrTimeZone(new Date(), 'YYYY-MM-DD HH:mm:ss', 'America/Fortaleza');\n */\nexport function dateToStrTimeZone(date, to, timezone) {\n  if (!timezone) return moment(date).format(to || 'YYYY-MM-DD HH:mm:ss')\n  return moment(date)\n    .tz(timezone || 'America/Fortaleza')\n    .format(to || 'YYYY-MM-DD HH:mm:ss')\n}\n\n/**\n *\n * @param {String} strdate\n * @param {String} from date format\n * @param {String} to date format\n * @returns {String} data formated (to)\n * @example\n * strDateFromTo('01/12/19', 'DD/MM/YY', 'YYY-MM-DD')\n */\nexport function strDateFromTo(strdate, from, to = 'YYYY-MM-DD HH:mm:ss') {\n  if (!strdate) return moment().format(to)\n  if (strdate instanceof Date) return moment(strdate).format(to)\n  if (moment.isMoment(strdate)) return strdate.format(to)\n\n  return moment(strdate, from).format(to)\n}\n\n/**\n *\n * @param {*} date\n * @param {*} format\n */\nexport function rangedMonth(date, format) {\n  const r = {\n    start: moment(date).startOf('month'),\n    end: moment(date).endOf('month')\n  }\n\n  if (typeof format === 'boolean') {\n    if (format) return { start: r.start, end: r.end }\n    return { start: r.toDate(), end: r.toDate() }\n  }\n\n  const defFormat = format || 'YYYY-MM-DD HH:mm:ss'\n  return {\n    start: moment(date).startOf('month').format(defFormat),\n    end: moment(date).endOf('month').format(defFormat)\n  }\n}\n\n/**\n * @function extractOfDateTime\n * @param {Date|String} datetime - string YYYY-MM-DD HH:mm:ss\n * @param {String} format date format ex: 'YYYY-MM-DD HH:mm:ss'\n * @param {String} timezone\n */\nexport function extractOfDateTime(datetime, format, timezone) {\n  const all = dateToStrTimeZone(datetime, format, timezone)\n  const spliter = all.split(' ')\n  const time = spliter.length > 1 ? spliter[1] : '00:00:00'\n  const date = spliter.length > 0 ? spliter[0] : 'Invalid date'\n  return {\n    date,\n    time\n  }\n}\n","import chunk from 'chunk'\n\nexport function isDefined(v) {\n  try {\n    return !!(v !== null && v !== undefined)\n  } catch (error) {\n    return false\n  }\n}\n\nexport function notNull(value, defaultValue = true) {\n  return value === undefined || value === null ? defaultValue : value\n}\n\n/**\n * Convert Int To String(Hex)\n * @param {Number} int\n * @param {Number} size integer\n * @param {Boolean} noLeftZero\n * @returns {string} hex(number)\n */\nexport function intToHex(int, size, noLeftZero) {\n  const rmL = s => s.replace(/^0+/, '')\n  try {\n    const hex = Number(int).toString(16).toLocaleUpperCase()\n    const len = hex.length % 2 !== 0 ? hex.length + 1 : hex.length\n    return noLeftZero ? rmL(hex) : hex.padStart(size || len, '0')\n  } catch (e) {\n    const rtn = '00'\n    return noLeftZero ? rmL(rtn) : rtn.padStart(size || 2, '0')\n  }\n}\n\n/**\n * Convert Int To String(Hex)\n * @param {Number} int\n * @returns {string} hex(number)\n */\nexport function intToHex2(int) {\n  try {\n    const hex = Number(int).toString(16).toLocaleUpperCase()\n    const len = hex.length % 2 !== 0 ? hex.length + 1 : hex.length\n    return hex.padStart(len, '0')\n  } catch (e) {\n    return `0${(0).toString(16)}`.slice(-2).toUpperCase()\n  }\n}\n/**\n * @function tryInteger\n * @param {any} value\n * @returns {Number|False}\n */\nexport function tryInteger(value) {\n  const numero = parseInt(value, 10)\n  if (Number.isInteger(numero) || numero <= 0) return numero\n  return false\n}\n\n/**\n * Converte Hexadecimal em Alphanumeric String\n * @function hexToAlphaNumeric\n * @param {Buffer | String | Array<String>} hexx\n * @param {Boolean} preserve se true converte invalid ALPHANUMERIC in space\n * @returns {String} hexadecimal string\n * @example\n * hexToAlphaNumeric('414243') // return 'ABC'\n * hexToAlphaNumeric('413943', true) // return 'A C'\n */\nexport function hexToAlphaNumeric(hexx, preserve) {\n  if (!hexx) return ''\n  let hex = ''\n  if (hexx instanceof Buffer) hex = hexx.toString('hex').toUpperCase()\n  if (Array.isArray(hexx)) hex = hexx.join('').toUpperCase()\n  hex = chunk(hex, 2)\n  let result = ''\n  for (let i = 0; i < hex.length; i++) {\n    const h = hex[i]\n    const num = hexToInt(h)\n    if (preserve) {\n      result += num >= 40 && num <= 126 ? String.fromCharCode(num) : ' '\n    } else if (num >= 40 && num <= 126) result += String.fromCharCode(num)\n  }\n  return result\n}\n\nexport function hex2a(hexx) {\n  const hex = hexx.toString() // force conversion\n  let str = ''\n  for (let i = 0; i < hex.length && hex.substr(i, 2) !== '00'; i += 2) {\n    str += String.fromCharCode(parseInt(hex.substr(i, 2), 16))\n  }\n  return str\n}\n\n/**\n * Convert HEX To String UTF-8\n * @param {Buffer} hex\n * @returns {string} ASCII(hex)\n */\nexport function hexToASC(hex) {\n  try {\n    if (hex instanceof Buffer) {\n      return hex.toString('utf8')\n    }\n    if (Array.isArray(hex)) return Buffer.from(hex.join(''), 'hex').toString('utf8')\n    return Buffer.from(hex, 'hex').toString('utf8')\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Convert ASCII To String(Hex)\n * @param {String} str\n * @returns {string} hex(number)\n */\nexport function ASCToHex(str) {\n  const arr1 = []\n  for (let n = 0, l = str.length; n < l; n++) {\n    const hex = Number(str.charCodeAt(n)).toString(16)\n    arr1.push(hex)\n  }\n  return arr1.join('')\n}\n\n/**\n * @function hexToInt\n * @param {String | Array} strhex\n * @returns {Number} decimal ASCII\n * @example\n * hexToInt('41'); // return 'A'\n * hexToInt(['41','42','43']); // return ['A','B','C']\n */\nexport function hexToInt(strhex) {\n  if (Array.isArray(strhex)) return strhex.map(item => hexToInt(item))\n  try {\n    const result = parseInt(strhex, 16)\n    return result\n  } catch (error) {\n    return 0\n  }\n}\n","// import _ from 'lodash'\nimport { forceArray } from './array'\n\n/**\n * Check if there is ownership in an object\n * @function objectHasKeys\n * @param {Object} obj\n * @param {Array<String>} keys\n * @returns {boolean}\n * @example\n * objectHasKeys({ a: 1, b: 2}, ['b','c']) // true match 'b'\n * objectHasKeys({ a: 1, b: 2}, ['c']) // false\n */\nexport function objectHasKeys(obj, keys) {\n  const keysO = Object.keys(obj)\n  for (let i = 0; i < keysO.length; i++) {\n    if (!keys.includes(keysO[i])) return true\n  }\n  return false\n}\n\n/**\n * Get object by omitting properties\n * @function objectWithoutProperties\n * @param {Object} obj\n * @param {Array<string>} keys\n * @returns {Object}\n * @example\n * objectWithoutProperties({ a: 1, b: 2, c: 3 }, ['b'])\n * // return { a: 1, c: 3 }\n */\nexport function objectWithoutProperties(obj, keys) {\n  const target = {}\n  const keysO = Object.keys(obj)\n  for (let i = 0; i < keysO.length; i++) {\n    const k = keysO[i]\n    if (!keys.includes(k)) target[k] = obj[k]\n  }\n  return target\n}\n\n/**\n * Compares object and returns only existing keys\n * @function onlyWithProperties\n * @param {Object} obj\n * @param {Array<string>|Object|String} keys\n * @returns {Object}\n * @example\n * onlyWithProperties({ a: 1, b: 2, c: 3 }, ['b']) // produce { b: 2 }\n * onlyWithProperties({ a: 1, b: 2, c: 3 }, { b: 1 }) // produce { b: 2 }\n * onlyWithProperties({ a: 1, b: 2, c: 3 }, 'b') // produce { b: 2 }\n */\nexport function onlyWithProperties(obj, keys = []) {\n  const target = {}\n  const keysCompare = forceArray(typeof keys === 'object' ? Object.keys(keys) : keys)\n  const keysO = Object.keys(obj)\n  for (let i = 0; i < keysO.length; i++) {\n    const k = keysO[i]\n    if (keysCompare.includes(k)) target[k] = obj[k]\n  }\n  return target\n}\n\n/**\n * @typedef {Object} replaceObjectOptions\n * @property {Boolean} clone clone this\n * @property {Boolean} inc incremental keys\n */\n\n/**\n * Replace object values\n * @function replaceObject\n * @param {Object} dest\n * @param {Object} src\n * @param {replaceObjectOptions} options\n * @returns {Object} object affected\n */\n// export function replaceObject(dest, src, options) {\n//   if (!dest || !src) return false\n//   const funcCopy = value => (options && options.clone ? _.cloneDeep(value) : value)\n\n//   Object.keys(src).forEach(key => {\n//     if ((options && options.inc) || key in dest) {\n//       // eslint-disable-next-line no-param-reassign\n//       dest[key] = funcCopy(src[key])\n//     }\n//   })\n\n//   return dest\n// }\n\n/**\n * Sorts array of objects\n * credits: https://www.sitepoint.com/sort-an-array-of-objects-in-javascript/\n * @function compareValues\n * @param {String} key\n * @param {String} order\n * @example\n * myArray.sort(compareValues('name', 'desc'));\n */\nexport function compareValues(key, order = 'asc') {\n  return function innerSort(a, b) {\n    if (!(key in a) || !(key in a)) return 0\n    const varA = typeof a[key] === 'string' ? a[key].toUpperCase() : a[key]\n    const varB = typeof b[key] === 'string' ? b[key].toUpperCase() : b[key]\n\n    let comparison = 0\n    if (varA > varB) {\n      comparison = 1\n    } else if (varA < varB) {\n      comparison = -1\n    }\n    return order === 'desc' ? comparison * -1 : comparison\n  }\n}\n","import sharp from 'sharp'\nimport base64Img from 'base64-img'\n\n/**\n * @function convertSvgToPng\n * @param {String} source\n * @param {String} dest\n */\nexport async function convertSvgToPng(source, dest) {\n  try {\n    const converted = await sharp(source).png().toFile(dest)\n    return converted\n  } catch (_error) {\n    return false\n  }\n}\n\n/**\n * @function toBase64Img\n * @param {String} filePath\n */\nexport function toBase64Img(filePath) {\n  return base64Img.base64Sync(filePath)\n}\n","/**\n * Arredonda numero com casas decimais\n * @function round\n * @param {Number} number\n * @param {Number} precision\n * @example\n * round(1234.5678, 1); // 1234.6\n */\nexport function round(number, precision = 4) {\n  if (!number || (number && number === 0)) return 0\n  const factor = Math.pow(10, precision)\n  const tempNumber = number * factor\n  const roundedTempNumber = Math.round(tempNumber)\n  return roundedTempNumber / factor\n}\n\n/**\n * Arredonda numero com casas decimais\n * @function round2\n * @param {Number} number\n * @param {Number} precision\n * @example\n * round2(1234.5678, 1); // 1234.6\n */\nexport function round2(number, precision = 4) {\n  if (!number || (number && number === 0)) return 0\n  if (typeof number === 'string') return parseFloat(number).toFixed(precision)\n  if (typeof number === 'number') return number.toFixed(precision)\n  return 0\n}\n\nexport function round3(number, precision = 4) {\n  return +`${Math.round(`${number}e+${precision}`)}e-${precision}`\n}\n"],"names":["range","begin","end","interval","i","replaceAll","str","needle","replacement","Array","isArray","rtn","length","split","join","getRandomInt","min","max","Math","ceil","floor","random","getRamdomHex","size","crypto","randomBytes","toString","fileExists","filePath","fs","existsSync","err","timeRest","inMinutes","dias","semanas","meses","anos","valorInicio","result","ano","mes","semana","dia","hora","mm","dateToStrTimeZone","date","to","timezone","moment","tz","format","hexToInt","strhex","map","item","parseInt","error","arr1","n","l","hex","Number","charCodeAt","push","buf","Buffer","chunk","replace","key","order","a","b","varA","toUpperCase","varB","comparison","async","source","dest","sharp","png","toFile","_error","unlinkSync","expires","dateNow","Date","now","ms","diff","duration","asMinutes","path","extname","url","hostname","indexOf","datetime","spliter","time","filename","algorithm","Promise","resolve","reject","shasum","createHash","s","ReadStream","on","data","update","hash","digest","parse","text","trim","payload","secret","uid","uuid","p","JSON","stringify","md5","getInRamdom","object","arrKeys","Object","keys","arrstr","len","whitelist","fill","q","getRandomValues","Uint8Array","init","toBuffer","from","hexx","substr","String","fromCharCode","preserve","num","int","noLeftZero","rmL","toLocaleUpperCase","padStart","e","slice","v","test","strMac","inputString","value","defaultValue","obj","target","keysO","k","includes","keysCompare","forceArray","paths","fim","r","start","startOf","endOf","toDate","defFormat","removeAll","chars","c","oldPath","newPath","force","renameSync","element","number","precision","factor","pow","tempNumber","round","parseFloat","toFixed","strdate","isMoment","cases","toLowerCase","w","base64Img","base64Sync","mask","im","is","charAt","numero","isInteger","arr"],"mappings":"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"}